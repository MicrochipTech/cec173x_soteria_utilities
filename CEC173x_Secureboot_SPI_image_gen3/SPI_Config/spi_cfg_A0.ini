;
;
;
; CEC173x SPI Image Generator configuration file 
; CEC173x_SPI_GEN  Version 64.0 06/29/2022 Label:2400
; spi_cfg.ini Version Version 64.0 06/29/2022 Label:2400
; spi cfg.ini is respective to the APCFG table: Major version 1 , Minor version 23
;
;
;
;
; 
[SPI]
; SPI Flash Image SIze in Megabits 128 =>  16MB; 
; 256 = 32 MB for the Internal SPI image for the EC_FW image 0/1  ; ; 256/8 = 32MB
SPISizeMegabits = 16
; ;SPI Flash Image SIze in Megabits 128 =>  16MB
; 256 = 32 MB for the External SPI image for the APCFG table 0/1 , Hash table 
ESPISizeMegabits = 128
;Enable the below flag to generate the SPI image based on the size specified in the 
; ESPISizeMegabitsAPxCx  where x range from 0-1 for supporting various port/comp
UseESPISizeMegabits=true
ESPISizeMegabitsAP0C0 = 256
ESPISizeMegabitsAP0C1 = 512
ESPISizeMegabitsAP1C0 = 256
ESPISizeMegabitsAP1C1 = 512

; Provide the ChipStr for A0 or A1
[GLACIERPART]
Chipstr=A0

[OWNERS]
Owner01PvtKeyFile = Keys/ECDSA_keys/ECC384rKEYOWNER01_raw.pem

; Provide the Public key offset and the pulib key 
; The following keys formats will be accepted
; A Private key is          
;               ECDSAPvtKeyFile = < pem private key >
; or a Pubkeys either in PEM or CRT fomrat 
;               ECDSAPubKeyFile = < pem public key >
; Total 8 Keys will be accepted max [KEY "7"]

[KEY "0"]
ECDSAPubKeyFile = Keys/ECDSA_keys/ECC384rKEY00_crt.pem

[KEY "1"]
ECDSAPubKeyFile = Keys/ECDSA_keys/ECC384rKEY01_crt.pem

[KEY "2"]
ECDSAPubKeyFile = Keys/ECDSA_keys/ECC384rKEY02_crt.pem

[KEY "3"]
ECDSAPubKeyFile = Keys/ECDSA_keys/ECC384rKEY03_crt.pem

[KEY "4"]
ECDSAPubKeyFile = Keys/ECDSA_keys/ECC384rKEY04_crt.pem

[KEY "5"]
ECDSAPubKeyFile = Keys/ECDSA_keys/ECC384rKEY05_crt.pem

[KEY "6"]
ECDSAPubKeyFile = Keys/ECDSA_keys/ECC384rKEY06_crt.pem

[KEY "7"]
ECDSAPubKeyFile = Keys/ECDSA_keys/ECC384rKEY07_crt.pem

[OCKKEY]
OCKPubKeyFile = Keys/ECDSA_keys/ECC384rKEY31_crt.pem

[UPDTKEY]
UpdatePubKeyFile = Keys/ECDSA_keys/ECC384rKEYOWNER01_crt.pem

[ECFWENTRY]
EcfwEntryData = ec_fw_entry_hash_blob.bin

; DEVICE SELECTION  for the CEC1734/CEC1736_S0_2ZW or _S0_2HW
; 2ZW =>  Dual SPI monitor
; 2HW =>  Single SPI monitor
[CEC173X]
Chipstr=CEC1736
Hardware=2ZW


[DEVICE]
TagAddr0 = 0
Tag0FlashComponent=0
TagAddr1 = 4
Tag1FlashComponent=0
BoardID = 0x316
KeyHashBlobAddr0 = 0x6000
KeyHashBlobAddr1 = 0x7000
;DevECDH2Pubkey = Keys/ECDH_bin/ecdh2pubkey.bin ;for A0 Part
DevECDH2Pubkey = Keys/ECDH_bin/Ecdh2PubKeyA1.bin ;for A1 part
UseOwnerContainerBA=false
OwnerContainerOffset0=0
OwnerContainer0BA=0x0
OwnerContainerOffset1=0x0
OwnerContainer1BA=0x0

;-------------------------------------------------------------------------------------
;--------------[APCFGHeader] Section -------------------------------------------------
;------------To Provide the APCFG base address  -------------------------------------
;--Fields for the  address of the AP_CFG_MEMORY_MAP BA 0/1 ---------------------------
;--------------------------------------------------------------------------------------
[APCFGHeader]
APBAPTRBA0=0x0010 ; AP_BA_PTR0_Base_Address OTP 824-827
;flash 0/1
APBAPTRBA0FlashComponent=0x0
APBAPTRBA1=0x0020 ; AP_BA_PTR1_Base_Address OTP 828-831
;flash 0/1
APBAPTRBA1FlashComponent=0x0
 
APCFGTABLEBA0=0x00340000 ; stores the APCFG table 0 BA in APBAPTRBA0 
APCFGTABLEBA0FlashComponent=0

APCFGTABLEBA1=0x00348000 ; stores the APCFG table 1  BA in APBAPTRBA1
APCFGTABLEBA1FlashComponent=0

APPUBKeyHash0=0x00330000 ; stores the APPublicKeyHashBlob0 Base in APBAPTRBA0  
APPUBKeyHash0FlashComponent=0 

APPUBKeyHash1=0x00334000 ; stores the APPublicKeyHashBlob1 Base in APBAPTRBA1 
APPUBKeyHash1FlashComponent=0
 
APPublicKeyCount = 32; AP_PubKey Key Count should match OTP 846

; [FWCRISIS]
; APBAPTRINTBA0=0x170000 ; Should be same as OTP 833-836
; PackageID=0x01         ; supported Package ID by EC_FW
; PackageVersion=0x01
; LengthPackage=0x4400
; NumberAPFWimages=0x2
; OffsetAPKHB0 =0x100
; OffsetAPCFG0 =0x700
; OffsetHashTable0 =0x1000
; OffsetImage0 =0x2000
; OffsetImage1 =0x4000
; OffsetPub=0x1B400  ; specify the offset of the public key to identify the lenght of the package; Temporary tool will remove this parameter. Key should be placed at contigious offset . i.e at the end of Image1
; ECDSAPvtKeyFile=Keys/input_test_keys/ec384_plain_priv.pem
; ECDSAPvtKeyPass=None
; ECDSAPubKeyFile=Keys/input_test_keys/ec384_pub.pem

;-------------------------------------------------------------------------------------
;--------------[APCFGTABLE] Section ----------------------------------------------
;------------To Provide the AP_CFG_MEMORY_MAP 0 fields -------------------------------
;--Fields for the  Structure  AP_CFG_MEMORY_MAP BA 0 ---------------------------------
;--------[APCFGTABLE "0" ] AP_CFG_MEMORY_MAP_0 -----------------------------------
; If the AP_CFG_MEMORY_MAP_1 structure need to fill  ---------------------------------
; Repeat the below table as  [APCFGTABLE "1"]  for AP_CFG_MEMORY_MAP_1--------------
;--------------------------------------------------------------------------------------
[APCFGTABLE "0" ]
APCFGID = 0x0006 ;AP_CFG Identification, offset 0x0, size 2
APCFGRollbackREVID = 0x01 ; AP_CFG Rollback Revision ID, offset 0x02, size 2
APCFGCurrentREVMinor = 0x23 ; AP_CFG Current Revision, offset 0x02, size 2
CustomerREV= 0x01 ; Customer Revision  , offset 0x04 , size 1
AuthKeyHashSel=0x0 ; Authentication Key hash Select, offset 0x05 , size 1
CustomerId=0x01 ; Customer ID , offset 0x06 , size 1, should match OTP 988
NoofAPImages = 0xF ;  Including All images in AP0  and AP1 
Hashtableaddresstable=0x5C0 ;Hash Table address Table offset at 0x4C0. Fixed do not modify
;--------------------------------------------------------------
StagedTagPayloadBA0 =0x100000 ;Staged TAG0 Payload BA,
StagedTagSPIPortSelect0 =0x2 ; Internal Flash
StagedTagSPIFlashComponent0 =0x0
RestoreTagPayloadBA0 =0x180000 ;Restore TAG0 Payload BA,
RestoreTagSPIPortSelect0 =0x2 ;Internal Flash
RestoreTagSPIFlashComponent0 =0x0
StagedTagPayloadBA1 =0x48000 ;Staged TAG1 Payload BA,
StagedTagSPIPortSelect1 =0x1
StagedTagSPIFlashComponent1 =0x1 ;Restore TAG1 Payload BA,
RestoreTagPayloadBA1 =0x90000
RestoreTagSPIPortSelect1 =0x1
RestoreTagSPIFlashComponent1 =0x1
TAGMaxPayloadSize0 =0x400 ; TAG0 Max Payload Size ,
TAGMaxPayloadSize1 =0x400 ; TAG1 Max Payload Size ,


;Features Options 1
FEATUREOPTION1=0x60 ;Feature Options 1 , Reset control options - AP)_RESET_DET and WDTRST will put both AP0 and EXTRST in reset

;Feature Options 2
FEATUREOPTION2=0xFC ;Feature Options 2 ,AP0_RESET_DET#, FAULT_DET# , AP0_HBLED# , WDTRST1 , WDTRST2 - Enabled .  AP1_RESET_IN# - Enable

;Feature option 3
FEATUREOPTION3 =0xA0 ;Feature Options 3 , AP0 and AP1 Boot from Passing Comp and Default comp - CS0#_out
FEATUREOPTION4 =0x00 ;Feature Options  4, WDTRST1 - GPIO127, AP0_RESET_DET# pin - GPIO201

ECFWMaskRegions=0x00 ; EC_FW Mask Regions - mask disabled
ECRegionBA0 =0x0000 ; EC Region 0 BA 
ECRegionBA0SPIPortSelect =0
ECRegionBA0SPIFlashCom =0
ECRegionBA1 =0x0000 ; EC Region 1 BA 
ECRegionBA1SPIPortSelect =0
ECRegionBA1SPIFlashCom =0
ECRegionBA2 =0x0000 ; EC Region 2 BA 
ECRegionBA2SPIPortSelect =0
ECRegionBA2SPIFlashCom =0
ECRegionBA3 =0x0000 ; EC Region 3 BA 
ECRegionBA3SPIPortSelect =0
ECRegionBA3SPIFlashCom =0
ECRegionBA4 =0x0000 ; EC Region 4 BA 
ECRegionBA4SPIPortSelect =0
ECRegionBA4SPIFlashCom =0
ECRegionBA5 =0x0000 ; EC Region 5 BA 
ECRegionBA5SPIPortSelect =0
ECRegionBA5SPIFlashCom =0
ECRegionBA6 =0x0000 ; EC Region 6 BA 
ECRegionBA6SPIPortSelect =0
ECRegionBA6SPIFlashCom =0
ECRegionBA7 =0x0000 ; EC Region 7 BA 
ECRegionBA7SPIPortSelect =0
ECRegionBA7SPIFlashCom =0
I2CCommandsSupportedAP0=0xFF ; I2C Commands Supported ; Not used 
I2CCommandsSupportedAP1=0xFF ; I2C Commands Supported ; Not used
I2CCopyCommandConfigParam=0x03 ; I2C Copy Command Configuration Parameters Run time Permission for AP0 and AP1 SPI Flash enabled
AP0Comp0Size=0x17 ; AP0 Component 0 Size  , 8MB
AP0Comp1Size=0x17 ; AP0 Component 1 Size  ,8MB
AP1Comp0Size=0x19 ; AP0 Component 2 Size ,32MB
AP1Comp1Size=0x17 ; AP0 Component 3 Size ,8MB
APCFGKeyRevPerm =0x0
APCFGRollBackProtPerm=0x00000000 ; Revision 0 is decomissioned
GlacierConfigOption1=0x11; Spimon0 enable;DIV=0, HRM on GPIO 107
GlacierConfigOption2=0x11; Spimon1 enable;DIV=0, HRM on GPIO 131

GlacierConfigOption3=0xC0 ; Address wrap violation enabled for AP0 C0 and C1; Kill mode power off
GlacierConfigOption4=0xC0 ; Address wrap violation enabled for AP0 C0 and C1 ; kill mode power off
GlacierConfigOption5=0xFB; HRM active, all boot HT pass , out of seq AP1 enabled
GlacierConfigOption6=0xC3 ; IDE Inter-Bus Intervention Enabled, 1ms units with delay value 3
GlacierConfigOption7=0x0 ; AP0 Match Fetch Timer not enabled 
GlacierConfigOption8=0x0 ; AP1 Match Fetch Timer not enabled 
GlacierConfigOption9=0x0 ; Timer for AP1 uboot not enabled, delay unit - none
GlacierConfigOption10=0x0 ; AP0 & AP1 Bytematch memory SRAM , Runtime image retries disabled

GlacierConfigOption12=0x0 ;  Timer for AP1 uboot not enabled
GlacierConfigOption13=0x0 ; No Opcode Lock with Preboot values
HOSTPORTSEL=0xEA ; AP0, AP1 and Attestation I2C Port Enabled. Use I2c Address strap option0 . SPI Select for APx - Either CSx#_IN active
HashtableAP0=0x33 ; 3HT in C0 , 3HT in C1
HashtableAP1=0x33 ; 3HT in C0 , 3HT in C1
GlacierConfigOption14=0xFC ; I2C Master CLK 1MHz,  GPIO Handshake disabled in AP0 and AP1 on I2C SDA Pin, GlacierConfigOption11 - 0xFC to diaable GPIO, 0xF0 to enabled handshake
PreBootPerOpcodesAP0Comp0R0=0xFFFFFFFF
PreBootPerOpcodesAP0Comp0R1=0xFFFFFFFF
PreBootPerOpcodesAP0Comp0R2=0xFFFFFFFF
PreBootPerOpcodesAP0Comp0R3=0xFFFFFFFF
PreBootPerOpcodesAP0Comp0R4=0xFFFFFFFF
PreBootPerOpcodesAP0Comp0R5=0xFFFFFFFF
PreBootPerOpcodesAP0Comp0R6=0xFFFFFFFF
PreBootPerOpcodesAP0Comp0R7=0xFFFFFFFF

PreBootPerOpcodesAP0Comp1R0=0xFFFFFFFF
PreBootPerOpcodesAP0Comp1R1=0xFFFFFFFF
PreBootPerOpcodesAP0Comp1R2=0xFFFFFFFF
PreBootPerOpcodesAP0Comp1R3=0xFFFFFFFF
PreBootPerOpcodesAP0Comp1R4=0xFFFFFFFF
PreBootPerOpcodesAP0Comp1R5=0xFFFFFFFF
PreBootPerOpcodesAP0Comp1R6=0xFFFFFFFF
PreBootPerOpcodesAP0Comp1R7=0xFFFFFFFF

PreBootPerOpcodesAP1Comp0R0=0xFFFFFFFF
PreBootPerOpcodesAP1Comp0R1=0xFFFFFFFF
PreBootPerOpcodesAP1Comp0R2=0xFFFFFFFF
PreBootPerOpcodesAP1Comp0R3=0xFFFFFFFF
PreBootPerOpcodesAP1Comp0R4=0xFFFFFFFF
PreBootPerOpcodesAP1Comp0R5=0xFFFFFFFF
PreBootPerOpcodesAP1Comp0R6=0xFFFFFFFF
PreBootPerOpcodesAP1Comp0R7=0xFFFFFFFF

PreBootPerOpcodesAP1Comp1R0=0xFFFFFFFF
PreBootPerOpcodesAP1Comp1R1=0xFFFFFFFF
PreBootPerOpcodesAP1Comp1R2=0xFFFFFFFF
PreBootPerOpcodesAP1Comp1R3=0xFFFFFFFF
PreBootPerOpcodesAP1Comp1R4=0xFFFFFFFF
PreBootPerOpcodesAP1Comp1R5=0xFFFFFFFF
PreBootPerOpcodesAP1Comp1R6=0xFFFFFFFF
PreBootPerOpcodesAP1Comp1R7=0xFFFFFFFF

PreBootKillmodeopcodesAP0Comp0R0 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp0R1 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp0R2 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp0R3 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp0R4 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp0R5 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp0R6 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp0R7 =0xFFFFFFFF

PreBootKillmodeopcodesAP0Comp1R0 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp1R1 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp1R2 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp1R3 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp1R4 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp1R5 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp1R6 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp1R7 =0xFFFFFFFF

PreBootKillmodeopcodesAP1Comp0R0 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp0R1 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp0R2 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp0R3 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp0R4 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp0R5 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp0R6 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp0R7 =0xFFFFFFFF

PreBootKillmodeopcodesAP1Comp1R0 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp1R1 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp1R2 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp1R3 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp1R4 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp1R5 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp1R6 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp1R7 =0xFFFFFFFF

PostBootPerOpcodesAP0Comp0R0=0xFFFFFFFF
PostBootPerOpcodesAP0Comp0R1=0xFFFFFFFF
PostBootPerOpcodesAP0Comp0R2=0xFFFFFFFF
PostBootPerOpcodesAP0Comp0R3=0xFFFFFFFF
PostBootPerOpcodesAP0Comp0R4=0xFFFFFFFF
PostBootPerOpcodesAP0Comp0R5=0xFFFFFFFF
PostBootPerOpcodesAP0Comp0R6=0xFFFFFFFF
PostBootPerOpcodesAP0Comp0R7=0xFFFFFFFF

PostBootPerOpcodesAP0Comp1R0=0xFFFFFFFF
PostBootPerOpcodesAP0Comp1R1=0xFFFFFFFF
PostBootPerOpcodesAP0Comp1R2=0xFFFFFFFF
PostBootPerOpcodesAP0Comp1R3=0xFFFFFFFF
PostBootPerOpcodesAP0Comp1R4=0xFFFFFFFF
PostBootPerOpcodesAP0Comp1R5=0xFFFFFFFF
PostBootPerOpcodesAP0Comp1R6=0xFFFFFFFF
PostBootPerOpcodesAP0Comp1R7=0xFFFFFFFF

PostBootPerOpcodesAP1Comp0R0=0xFFFFFFFF
PostBootPerOpcodesAP1Comp0R1=0xFFFFFFFF
PostBootPerOpcodesAP1Comp0R2=0xFFFFFFFF
PostBootPerOpcodesAP1Comp0R3=0xFFFFFFFF
PostBootPerOpcodesAP1Comp0R4=0xFFFFFFFF
PostBootPerOpcodesAP1Comp0R5=0xFFFFFFFF
PostBootPerOpcodesAP1Comp0R6=0xFFFFFFFF
PostBootPerOpcodesAP1Comp0R7=0xFFFFFFFF

PostBootPerOpcodesAP1Comp1R0=0xFFFFFFFF
PostBootPerOpcodesAP1Comp1R1=0xFFFFFFFF
PostBootPerOpcodesAP1Comp1R2=0xFFFFFFFF
PostBootPerOpcodesAP1Comp1R3=0xFFFFFFFF
PostBootPerOpcodesAP1Comp1R4=0xFFFFFFFF
PostBootPerOpcodesAP1Comp1R5=0xFFFFFFFF
PostBootPerOpcodesAP1Comp1R6=0xFFFFFFFF
PostBootPerOpcodesAP1Comp1R7=0xFFFFFFFF

PostBootKillmodeopcodesAP0Comp0R0=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp0R1=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp0R2=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp0R3=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp0R4=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp0R5=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp0R6=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp0R7=0xFFFFFFFF

PostBootKillmodeopcodesAP0Comp1R0=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp1R1=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp1R2=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp1R3=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp1R4=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp1R5=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp1R6=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp1R7=0xFFFFFFFF

PostBootKillmodeopcodesAP1Comp0R0=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp0R1=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp0R2=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp0R3=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp0R4=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp0R5=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp0R6=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp0R7=0xFFFFFFFF

PostBootKillmodeopcodesAP1Comp1R0=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp1R1=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp1R2=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp1R3=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp1R4=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp1R5=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp1R6=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp1R7=0xFFFFFFFF
NoofMemoryRegion=0x01040108 ; 8 for AP0 C0 ,4 in AP1C0 and  1 for AP0/AP1 C1

;AP0 Memory region 0
MemoryAccessProtectBA=0x0 ; AP0Comp0 run time start address	
MemoryAccessProtect=0x1 ; (size in  4k aligned)/4k ; 0x1000/0x1000 (i.e) 0x1; run time end address
AccessPreBootAPboot=0x90 ; read only , CS0
AccessPostBootAPboot=0x90 ; read only, CS0

;AP0 Memory region 1
MemoryAccessProtectBA1=0x1000 ; Ap0 comp0 run time start address
MemoryAccessProtect1=0x34F ; run time end address
AccessPreBootAPboot1=0x90 ; read only , CS0
AccessPostBootAPboot1=0x80 ;none are allowed , CS0

;AP0 Memory region 2
MemoryAccessProtectBA2=0x350000 ; Ap0 comp0 run time start address
MemoryAccessProtect2=0x600 ; run time end address ,all available sectors  from base address
AccessPreBootAPboot2=0xB1  ; read ,wr and 32K erase, CS0
AccessPostBootAPboot2=0xF7 ; read, wr , 64 & 32k erase ,  CS0

;AP0Memory region 3
MemoryAccessProtectBA3=0x600000 ;AP0 C1
MemoryAccessProtect3=0x2B0;
AccessPreBootAPboot3=0xB0 ; wr, read, CS0
AccessPostBootAPboot3=0x80 ; none, , CS0

;AP0 Memory region 4
MemoryAccessProtectBA4=0x600000
MemoryAccessProtect4=0x2C0;
AccessPreBootAPboot4=0x93 ; 32k  & 64K erase, read, CS0
AccessPostBootAPboot4=0xF7 ; read , wr, erase 32k &84K, , CS0

;AP0 Memory region 5
MemoryAccessProtectBA5=0x8C0000
MemoryAccessProtect5=0x500
AccessPreBootAPboot5=0x93 ; read  , erase`, CS0
AccessPostBootAPboot5=0xA0 ; write only, , CS0

;AP0 Memory region 6
MemoryAccessProtectBA6=0xDC0000
MemoryAccessProtect6=0x600
AccessPreBootAPboot6=0xF7 ; read , wr, erase, CS0
AccessPostBootAPboot6=0xF0 ; read, erase, CS0

;AP0 Memory region 7
MemoryAccessProtectBA7=0x13C0000
MemoryAccessProtect7=0xC40
AccessPreBootAPboot7=0xF7 ; read wr, erase, CS0
AccessPostBootAPboot7=0x90; read only, CS0

;AP0 Memory region 8
MemoryAccessProtectBA8=0x0
MemoryAccessProtect8=0x2000
AccessPreBootAPboot8=0xFF  ;  read , wr, erase, CS1
AccessPostBootAPboot8=0x98 ; read only, CS1

;AP0 Memory region 9
; MemoryAccessProtectBA9=0x0
; MemoryAccessProtect9=0x0
; AccessPreBootAPboot9=0x0 ,
; AccessPostBootAPboot9=0x0

;AP0 Memory region 10
; MemoryAccessProtectBA10=0x0
; MemoryAccessProtect10=0x0
; AccessPreBootAPboot10=0x0
; AccessPostBootAPboot10=0x0

;AP0 Memory region 11
; MemoryAccessProtectBA11=0x0
; MemoryAccessProtect11=0x0
; AccessPreBootAPboot11=0x0
; AccessPostBootAPboot11=0x0

;AP0 Memory region 12
; MemoryAccessProtectBA12=0x0
; MemoryAccessProtect12=0x0
; AccessPreBootAPboot12=0x0
; AccessPostBootAPboot12=0x0

;AP0 Memory region 13
; MemoryAccessProtectBA13=0x0
; MemoryAccessProtect13=0x0
; AccessPreBootAPboot13=0x0
; AccessPostBootAPboot13=0x0

;AP0 Memory region 14
; MemoryAccessProtectBA14=0x0
; MemoryAccessProtect14=0x0
; AccessPreBootAPboot14=0x0
; AccessPostBootAPboot14=0x0

;AP0 Memory region 15
; MemoryAccessProtectBA15=0x0
; MemoryAccessProtect15=0x0
; AccessPreBootAPboot15=0x0
; AccessPostBootAPboot15=0x0

;AP1 Memory region 0
MemoryAccessProtectBA16=0x01 ; AP1 comp 0 run time start address
MemoryAccessProtect16=0x100; run time end address(1MB protection/0x1000)
AccessPreBootAPboot16=0xF7 ; all operations allowed, CS0
AccessPostBootAPboot16=0x80 ; none allowed, , CS0

;AP1 Memory region 1
MemoryAccessProtectBA17=0x100001 ; AP1 comp 0 run time start address
MemoryAccessProtect17=0x500 ; run time end address
AccessPreBootAPboot17=0x90 ; read only, CS0
AccessPostBootAPboot17=0xF7 ; all operations allowed, CS0

;AP1 Memory region 2
MemoryAccessProtectBA18=0x600001 ; AP1 comp 0 run time start address
MemoryAccessProtect18=0xFFFF; run time end address
AccessPreBootAPboot18=0xF7 ; all operations allowed, CS0
AccessPostBootAPboot18=0x90 ; read only , CS0

;AP1 Memory region 3
MemoryAccessProtectBA19=0x2000001 ; AP1 comp 0 run time start address
MemoryAccessProtect19=0xFE000; run time end address up to 4GB
AccessPreBootAPboot19=0x90 ;  read only , CS0
AccessPostBootAPboot19=0xF7 ; all operations allowed, CS0

;AP1 Memory region 4
MemoryAccessProtectBA20=0x80001 ; AP1 comp 0 run time start address
MemoryAccessProtect20=0xFFFFF ; (protect all sectors from address 0x80000)
AccessPreBootAPboot20=0x98 ; read only , CS1
AccessPostBootAPboot20=0xFF ; all operations allowed, CS1

;AP1 Memory region 5
; MemoryAccessProtectBA21=0x5
; MemoryAccessProtect21=0x6
; AccessPreBootAPboot21=0x7
; AccessPostBootAPboot21=0x8

;AP1 Memory region 6
; MemoryAccessProtectBA22=0x1
; MemoryAccessProtect22=0x2
; AccessPreBootAPboot22=0x3
; AccessPostBootAPboot22=0x4

;AP1 Memory region 7
; MemoryAccessProtectBA23=0x5
; MemoryAccessProtect23=0x6
; AccessPreBootAPboot23=0x7
; AccessPostBootAPboot23=0x8

;AP1 Memory region 8
; MemoryAccessProtectBA24=0x1
; MemoryAccessProtect24=0x2
; AccessPreBootAPboot24=0x3
; AccessPostBootAPboot24=0x4

;AP1 Memory region 9
; MemoryAccessProtectBA25=0x5
; MemoryAccessProtect25=0x6
; AccessPreBootAPboot25=0x7
; AccessPostBootAPboot25=0x8

;AP1 Memory region 10
; MemoryAccessProtectBA26=0x1
; MemoryAccessProtect26=0x2
; AccessPreBootAPboot26=0x3
; AccessPostBootAPboot26=0x4

;AP1 Memory region 11
; MemoryAccessProtectBA27=0x5
; MemoryAccessProtect27=0x6
; AccessPreBootAPboot27=0x7
; AccessPostBootAPboot27=0x8

;AP1 Memory region 12
; MemoryAccessProtectBA28=0x1
; MemoryAccessProtect28=0x2
; AccessPreBootAPboot28=0x3
; AccessPostBootAPboot28=0x4

;AP1 Memory region 13
; MemoryAccessProtectBA29=0x5
; MemoryAccessProtect29=0x6
; AccessPreBootAPboot29=0x7
; AccessPostBootAPboot29=0x8

;AP1 Memory region 14
; MemoryAccessProtectBA30=0x1
; MemoryAccessProtect30=0x2
; AccessPreBootAPboot30=0x3
; AccessPostBootAPboot30=0x4

;AP1 Memory region 15
; MemoryAccessProtectBA31=0x5
; MemoryAccessProtect31=0x6
; AccessPreBootAPboot31=0x7
; AccessPostBootAPboot31=0x8

LockopcodesFlashes=0x0 ;lock opcodes not enabled

I2CcommandssupportedAttestation =0x1000
I2CAddressOption0AP0 =0x11
I2CAddressOption0AP1 =0x22
I2CAddressOption0Attestation =0x64 ;I2C slave address of EC (Attestation port), this is not fixed, its for test purpose
I2CAddressOption1AP0 =0x74
I2CAddressOption1AP1 =0x62
I2CAddressOption1Attestation =0x40
I2CAddressOption2AP0 =0x54
I2CAddressOption2AP1 =0x52
I2CAddressOption2Attestation =0x40    
I2CAddressOption3AP0 =0x80
I2CAddressOption3AP1 =0x72
I2CAddressOption3Attestation =0x40
;Slot 1 contains chain 2  which has -> Root ca certificate (cert 3) ->  DEVIK certificate(cert 2) -> DEV AK certificate( cert 0)
HeadPointer0 =0x40
HeadPointer1 =0x40
HeadPointer2 =0x03 ;Bits[5:0] Head Pointer for Chain 2 points to certificate 3 (pca)
HeadPointer3 =0x40
HeadPointer4 =0x40
HeadPointer5 =0x40
HeadPointer6 =0x40
HeadPointer7 =0x40

;//tail pointer for certificate 0 - 0x40 (end of chain)
;//tail pointer for certificate 1 - no certificate 1 exist in this chain configuration hence 0xff
;//tail pointer for certificate 2 - 0x00 -> cert 2 points to cert 0
;//tail pointer for certificate 3 - 0x02 -> cert 3 points to cert 2
TailPointerCertificate  =0x40FF0002FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
;Bits[7:4] Slot 1 Certificate Chain Assignment = 2h
;slot 1 contains chain 2, all other slots no chain present (hence 8h)
CertChainSlotAssignment01 =0x28
CertChainSlotAssignment23 =0x88
CertChainSlotAssignment45 =0x88
CertChainSlotAssignment67 =0x88
;eid fixed as 0x94 If I2CADDR[1:0]= 00
EID0 =0x94  ;test data for static EID
EID1 =0x40
EID2 =0x40
EID3 =0x40
EID4 =0x40

EMCChannelEnable =0x00  ; EMC Channels Disabled
VTRPLLLimits =0xFF00
VTR2Limits =0xFF00
VTR1Limits =0xFF00
VRCAPLimits =0xFF00
VTRREGLimits =0xFF00
VTRANALOGLimits =0xFF00
InternalTempLimits =0xFF00
EMCFaultResponse =0x0

PLDMdevicedescriptoroverride  =0x7	
DeviceIdentifierLength  =0xC8
Descriptorcount  =0x10
Descriptor  =0x00000255100221439990007787646625476178628537687
CapabilitiesDuringUpgrade  =0x24
Componentclassification  =0x000C
TID  =0x1


;HT0 for all components
;HT0AP0C0
Hashtable0AP0F0 =0x120000
Hashtable0AP0F0SPIPortSelect =0x0 ; Fixed Dont change 
Hashtable0AP0F0SPIFlashComp =0x00 ; Fixed Dont change 
HashtableAttr0AP0F0 =0x3 ; Boot HT

;HT0AP0C1
Hashtable0AP0F1 =0x120000
Hashtable0AP0F1SPIPortSelect =0x00 ; Fixed Dont change 
Hashtable0AP0F1SPIFlashComp =0x01 ; Fixed Dont change 
HashtableAttr0AP0F1=0x3 ; Boot HT

;HT0AP1C0
Hashtable1AP1F0 =0x120000
Hashtable1AP1F0SPIPortSelect =0x01 ; Fixed Dont change 
Hashtable1AP1F0SPIFlashComp =0x00 ; Fixed Dont change 
HashtableAttr1AP1F0=0x3 ; Boot HT

;HT0AP1C1
Hashtable1AP1F1 =0x120000
Hashtable1AP1F1SPIPortSelect =0x01 ; Fixed Dont change 
Hashtable1AP1F1SPIFlashComp =0x01 ; Fixed Dont change 
HashtableAttr1AP1F1=0x3 ; Boot HT

;HT1 for all components
;HT1AP0C0
SHashtable0AP0F0 =0x130000
SHashtable0AP0F0SPIPortSelect =0x0
SHashtable0AP0F0SPIFlashComp =0x00
SHashtableAttr0AP0F0=0x3 ; Boot HT

;HT1AP0C1
SHashtable0AP0F1 =0x130000
SHashtable0AP0F1SPIPortSelect =0x00
SHashtable0AP0F1SPIFlashComp =0x01
SHashtableAttr0AP0F1=0x0 ; Recovery HT 

;HT1AP1C0
SHashtable1AP1F0 =0x130000
SHashtable1AP1F0SPIPortSelect =0x01
SHashtable1AP1F0SPIFlashComp =0x00
SHashtableAttr1AP1F0=0x3 ; Boot HT

;HT1AP1C1
SHashtable1AP1F1 =0x130000
SHashtable1AP1F1SPIPortSelect =0x01
SHashtable1AP1F1SPIFlashComp =0x01
SHashtableAttr1AP1F1=0x0 ;Recovery HT

;HT2 for all components
;HT2AP0C0
FHashtable0AP0F0 =0x140000
FHashtable0AP0F0SPIPortSelect =0x0
FHashtable0AP0F0SPIFlashComp =0x00
FHashtableAttr0AP0F0=0x0 ;Recovery HT

;HT2AP0C1
FHashtable0AP0F1 =0x140000
FHashtable0AP0F1SPIPortSelect =0x00
FHashtable0AP0F1SPIFlashComp =0x01
FHashtableAttr0AP0F1=0x3 ;Boot HT

;HT2AP1C0
FHashtable1AP1F0 =0x140000
FHashtable1AP1F0SPIPortSelect =0x01
FHashtable1AP1F0SPIFlashComp =0x00
FHashtableAttr1AP1F0=0x0 ;Recovery HT

;HT2AP1C1
FHashtable1AP1F1 =0x140000
FHashtable1AP1F1SPIPortSelect =0x01
FHashtable1AP1F1SPIFlashComp =0x01
FHashtableAttr1AP1F1=0x3; Boot HT


;Redundant HT0 for all components
RHashtable0AP0F0 =0x150000
RHashtable0AP0F0SPIPortSelect =0x0
RHashtable0AP0F0SPIFlashComp =0x00
RHashtableAttr0AP0F0=0x3


RHashtable0AP0F1 =0x150000
RHashtable0AP0F1SPIPortSelect =0x00
RHashtable0AP0F1SPIFlashComp =0x01
RHashtableAttr0AP0F1=0x3

RHashtable1AP1F0 =0x150000
RHashtable1AP1F0SPIPortSelect =0x01
RHashtable1AP1F0SPIFlashComp =0x00
RHashtableAttr1AP1F0=0x3

RHashtable1AP1F1 =0x150000
RHashtable1AP1F1SPIPortSelect =0x01
RHashtable1AP1F1SPIFlashComp =0x01
RHashtableAttr1AP1F1=0x3

;Redundant HT1 for all components
RSHashtable0AP0F0 =0x160000
RSHashtable0AP0F0SPIPortSelect =0x0
RSHashtable0AP0F0SPIFlashComp =0x00
RSHashtableAttr0AP0F0=0x3

RSHashtable0AP0F1 =0x160000
RSHashtable0AP0F1SPIPortSelect =0x00
RSHashtable0AP0F1SPIFlashComp =0x01
RSHashtableAttr0AP0F1=0x0

RSHashtable1AP1F0 =0x160000
RSHashtable1AP1F0SPIPortSelect =0x01
RSHashtable1AP1F0SPIFlashComp =0x00
RSHashtableAttr1AP1F0=0x3

RSHashtable1AP1F1 =0x160000
RSHashtable1AP1F1SPIPortSelect =0x01
RSHashtable1AP1F1SPIFlashComp =0x01
RSHashtableAttr1AP1F1=0x0

;Redundant HT2 for all components
RFHashtable0AP0F0 =0x170000
RFHashtable0AP0F0SPIPortSelect =0x0
RFHashtable0AP0F0SPIFlashComp =0x00
RFHashtableAttr0AP0F0=0x0

RFHashtable0AP0F1 =0x170000
RFHashtable0AP0F1SPIPortSelect =0x00
RFHashtable0AP0F1SPIFlashComp =0x01
RFHashtableAttr0AP0F1=0x3

RFHashtable1AP1F0 =0x170000
RFHashtable1AP1F0SPIPortSelect =0x01
RFHashtable1AP1F0SPIFlashComp =0x00
RFHashtableAttr1AP1F0=0x0

RFHashtable1AP1F1 =0x170000
RFHashtable1AP1F1SPIPortSelect =0x01
RFHashtable1AP1F1SPIFlashComp =0x01
RFHashtableAttr1AP1F1=0x3

;64 bytes for Staged Image Location for AP_FW update SImageBA0 to SImageBA15
;AP_FW0
SImageBA0 =0xA0000
SSPIPortSelect0=0x0
SSPIFlashComp0 =0x0

;AP_FW1
SImageBA1 =0xB0000
SSPIPortSelect1=0x0
SSPIFlashComp1 =0x0

;AP_FW2
SImageBA2 =0xA0000
SSPIPortSelect2=0x0
SSPIFlashComp2 =0x0

;AP_FW3
SImageBA3 =0xA0000
SSPIPortSelect3=0x0
SSPIFlashComp3 =0x0

;AP_FW4
SImageBA4 =0xA0000
SSPIPortSelect4=0x0
SSPIFlashComp4 =0x0

;AP_FW5
SImageBA5 =0xA0000
SSPIPortSelect5=0x0
SSPIFlashComp5 =0x0

;AP_FW6
SImageBA6 =0xA0000
SSPIPortSelect6=0x0
SSPIFlashComp6 =0x0

;AP_FW7
SImageBA7 =0xA0000
SSPIPortSelect7=0x0
SSPIFlashComp7 =0x0

;AP_FW8
SImageBA8 =0xA0000
SSPIPortSelect8=0x0
SSPIFlashComp8 =0x0

;AP_FW9
SImageBA9 =0xA0000
SSPIPortSelect9=0x0
SSPIFlashComp9 =0x0

;AP_FW10
SImageBA10 =0xA0000
SSPIPortSelect10=0x0
SSPIFlashComp10 =0x0

;AP_FW11
SImageBA11 =0xA0000
SSPIPortSelect11=0x0
SSPIFlashComp11 =0x0

;AP_FW12
SImageBA12 =0xA0000
SSPIPortSelect12=0x0
SSPIFlashComp12 =0x0

;AP_FW13
SImageBA13 =0xA0000
SSPIPortSelect13=0x0
SSPIFlashComp13 =0x0

;AP_FW14
SImageBA14 =0xA0000
SSPIPortSelect14=0x1
SSPIFlashComp14 =0x0

;AP_FW15
SImageBA15 =0xA0000
SSPIPortSelect15=0x0
SSPIFlashComp15 =0x0

; 48 bytes for Staged Image Location for Hash table for SImageBA16 to SImageBA27
;HT0AP0C0
SImageBA16 =0x180000
SSPIPortSelect16=0x00
SSPIFlashComp16 =0x00

;HT0AP0C1
SImageBA17 =0x180000
SSPIPortSelect17=0x00
SSPIFlashComp17 =0x01

;HT0AP1C0
SImageBA18 =0x180000
SSPIPortSelect18=0x01
SSPIFlashComp18 =0x00

;HT0AP1C1
SImageBA19 =0x180000
SSPIPortSelect19=0x01
SSPIFlashComp19 =0x01

;HT1AP0C0
SImageBA20 =0x190000
SSPIPortSelect20=0x00
SSPIFlashComp20 =0x00

;HT1AP0C1
SImageBA21 =0x190000
SSPIPortSelect21=0x00
SSPIFlashComp21 =0x01

;HT1AP1C0
SImageBA22 =0x190000
SSPIPortSelect22=0x01
SSPIFlashComp22 =0x00

;HT1AP1C1
SImageBA23 =0x190000
SSPIPortSelect23=0x01
SSPIFlashComp23 =0x01

;HT2AP0C0
SImageBA24 =0x200000
SSPIPortSelect24=0x0
SSPIFlashComp24 =0x0

;HT2AP0C1
SImageBA25 =0x200000
SSPIPortSelect25=0x0
SSPIFlashComp25 =0x1

;HT2AP1C0
SImageBA26 =0x200000
SSPIPortSelect26=0x1
SSPIFlashComp26 =0x0

;HT2AP1C1
SImageBA27 =0x200000
SSPIPortSelect27=0x1
SSPIFlashComp27 =0x1

;Restore Image Location AP0, Restore location for APCFG0
RImageBA0=0x101000 ; Restore Image n Base Address , offset 0x40h*n +0x30,size 4
RSPIPortSelect0=0x0
RSPIFlashComp0=0x0

;Restore Image Location AP1,  Restore location for APCFG1
RImageBA1=0x101000 ; Restore Image n Base Address , offset 0x40h*n +0x30,size 4
RSPIPortSelect1=0x1
RSPIFlashComp1=0x0

; 120 bytes for the Restore Image location for AP_FW update and Hash table ; start from RImageBA2 to RImageBA31
;AP_FW0
RImageBA2=0xA0000 ; 
RSPIPortSelect2=0x0
RSPIFlashComp2=0x0

;AP_FW1
RImageBA3=0xA0000 ; 
RSPIPortSelect3=0x0
RSPIFlashComp3=0x0

;AP_FW2
RImageBA4=0xA0000 ; 
RSPIPortSelect4=0x0
RSPIFlashComp4=0x0

;AP_FW3
RImageBA5=0xA0000 ; 
RSPIPortSelect5=0x0
RSPIFlashComp5=0x0

;AP_FW4
RImageBA6=0xA0000 ; 
RSPIPortSelect6=0x0
RSPIFlashComp6=0x0

;AP_FW5
RImageBA7=0xA0000 ; 
RSPIPortSelect7=0x0
RSPIFlashComp7=0x0

;AP_FW6
RImageBA8=0xA0000 ; 
RSPIPortSelect8=0x0
RSPIFlashComp8=0x0

;AP_FW7
RImageBA9=0xA0000 ; 
RSPIPortSelect9=0x0
RSPIFlashComp9=0x0

;AP_FW8
RImageBA10=0xA0000 ; 
RSPIPortSelect10=0x0
RSPIFlashComp10=0x0

;AP_FW9
RImageBA11=0xA0000 ; 
RSPIPortSelect11=0x0
RSPIFlashComp11=0x0

;AP_FW10
RImageBA12=0xA0000 ; 
RSPIPortSelect12=0x0
RSPIFlashComp12=0x0

;AP_FW11
RImageBA13=0xA0000 ; 
RSPIPortSelect13=0x0
RSPIFlashComp13=0x0

;AP_FW12
RImageBA14=0xA0000 ; 
RSPIPortSelect14=0x0
RSPIFlashComp14=0x0

;AP_FW13
RImageBA15=0xA0000 ; 
RSPIPortSelect15=0x0
RSPIFlashComp15=0x0

;AP_FW14
RImageBA16=0xA0000 ; 
RSPIPortSelect16=0x0
RSPIFlashComp16=0x0

;AP_FW15
RImageBA17=0xA0000 ; 
RSPIPortSelect17=0x0
RSPIFlashComp17=0x0

; HASH TABLE Restore location 
; HT0AP0C0
RImageBA18=0x181000 ; 
RSPIPortSelect18=0x0
RSPIFlashComp18=0x0

; HT0AP0C1
RImageBA19=0x181000 ; 
RSPIPortSelect19=0x0
RSPIFlashComp19=0x1

; HT0AP1C0
RImageBA20=0x181000 ; 
RSPIPortSelect20=0x1
RSPIFlashComp20=0x0

; HT0AP1C1
RImageBA21=0x181000 ; 
RSPIPortSelect21=0x1
RSPIFlashComp21=0x1

; HT1AP0C0
RImageBA22=0x191000 ; 
RSPIPortSelect22=0x0
RSPIFlashComp22=0x0

; HT1AP0C1
RImageBA23=0x191000 ; 
RSPIPortSelect23=0x0
RSPIFlashComp23=0x1

; HT1AP1C0
RImageBA24=0x191000 ; 
RSPIPortSelect24=0x1
RSPIFlashComp24=0x0

; HT1AP1C1
RImageBA25=0x191000 ; 
RSPIPortSelect25=0x1
RSPIFlashComp25=0x1

; HT2AP0C0
RImageBA26=0x201000 ; 
RSPIPortSelect26=0x0
RSPIFlashComp26=0x0

; HT2AP0C1
RImageBA27=0x201000 ; 
RSPIPortSelect27=0x0
RSPIFlashComp27=0x1

; HT2AP1C0
RImageBA28=0x201000 ; 
RSPIPortSelect28=0x1
RSPIFlashComp28=0x0

; HT2AP1C1
RImageBA29=0x201000 ; 
RSPIPortSelect29=0x1
RSPIFlashComp29=0x1

; STAGED FOR AP_CFG
;APCFG0
RImageBA30=0x100000 ; 
RSPIPortSelect30=0x0
RSPIFlashComp30=0x0

;APCFG1
RImageBA31=0x100000 ; 
RSPIPortSelect31=0x1
RSPIFlashComp31=0x0


UseMCHPECDSA = true  ; AP_CFG Table Co-Signature offset AP_FW image map
MCHPECDSAPrivKeyFile =Keys/input_test_keys/ec384.pem 
MCHPECDSAPrivKeyPassword =ec384

;;=============================================================================================================================================;;
; Hash Table 0 For AP0 C0 , its for Port 0 and comp 0 to store the 
; Hash table Hashtable0AP0F0 offset in the below
; Specify fields for hash table of port 0/comp 0 for section[HASHTABLE0 "0" ] 
; If Dont want Port 0/Comp 0 , comment the below fields and section[HASHTABLE0 "0" ]
; HT0AP0C0 - Hash Table 0 For AP0C0
[HASHTABLE0 "0" ]
NoofAPImages =0x2 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x94 ; (28 + (NoofAPImages * 60))
HashtableImageBeginIndex =0x0
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x4000 ; Image n Base Address, offset 0x40h*n +0x00,size 4. Byte match should be in 8k boundary adress	
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000 ; Specify the length of the binary in bytes , the tool will covert to 64 or 8k chuncks
ImageAttrib0 = 0x03000501 ; Byte match , Primary with GImage id 3 in C0

UseImageBinary1 =true
ImageBaseAddr1	=0x560000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary1 = AP_FW_Images/AP0_1K.bin
ImageSize1 =0x400
ImageAttrib1 =0x104 ; Hash match ; used as first hash match image, uboot main

;HT1AP0C0 
[HASHTABLE0 "4" ]
NoofAPImages =0x1 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x58 ; (28 + (NoofAPImages * 60))
HashtableImageBeginIndex =0x2
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned	

UseImageBinary0 =true
ImageBaseAddr0	=0x350000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary0 = AP_FW_Images/AP0_2M.bin
ImageSize0 =0x200000
ImageAttrib0 =0x105 ; Hash Match ,  critical


;HT2AP0C0
[HASHTABLE0 "8" ]
NoofAPImages =0x1 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x58 ; (28 + (NoofAPImages * 60))
HashtableImageBeginIndex =0x3
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x10000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
UseImageBinary0 =true			
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000
ImageAttrib0 =0x0 ; GImage, Byte Match

; Hash Table 0 for AP0 C1 , its for Port 0 and comp 1 to store the 
; Hash table Hashtable0AP0F1 offset in the below
; Specify fields for hash table of port 0/comp 1 for section[HASHTABLE0 "1" ] 
; If Dont want Port 0/Comp 1 , comment the below fields and section[HASHTABLE0 "1" ]
;HT0AP0C1
[HASHTABLE0 "1" ]
NoofAPImages =0x2 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x94 ; (28 + (NoofAPImages * 60))
HashtableImageBeginIndex =0x0
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x4000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000
ImageAttrib0 = 0x03000500; Byte Match, without FB, has Gimage 3 in C0

UseImageBinary1 =true
ImageBaseAddr1	=0x200000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary1 = AP_FW_Images/AP0_4M.bin
ImageSize1 =0x400000
ImageAttrib1 =0x104 ;  Hash Match , Primary without FB

;HT1AP0C1
[HASHTABLE0 "5" ]
NoofAPImages =0x1 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x58
HashtableImageBeginIndex =0x2
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x662000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000
ImageAttrib0 =0x105 ;  Hash Match ; Primary without FB, critical

;HT2AP0C1
[HASHTABLE0 "9" ]
NoofAPImages =0x1 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x58
HashtableImageBeginIndex =0x3
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x665000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000
ImageAttrib0 =0x00110305 ;  Hash Match , FB Image id 1 in C1


; Hash Table 1 for AP1 C0 , its for Port 1 and comp 0 to store the 
; Hash table Hashtable1AP1F0 offset in the below
; Specify fields for hash table of port 1/comp 0 for section[HASHTABLE0 "2" ] 
; If Dont want Port 1/Comp 0 , comment the below fields and section[HASHTABLE0 "2" ]
;HT0AP1C0
[HASHTABLE0 "2" ]
NoofAPImages =0x1 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x58 ; (28 + (NoofAPImages * 60))
HashtableImageBeginIndex =0x0
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x4000 ; Image n Base Address, offset 0x40h*n +0x00,size 4		
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000 ; Specify the length of the binary in bytes , the tool will covert to 64 or 8k chuncks
ImageAttrib0 = 0x03000501 ; Byte match , Primary with GImage id 3 in C0

;HT1AP1C0
[HASHTABLE0 "6" ]
NoofAPImages =0x2 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x94
HashtableImageBeginIndex =0x1
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x560000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary0 = AP_FW_Images/AP0_1K.bin
ImageSize0 =0x400
ImageAttrib0 =0x104 ; Hash Match 

UseImageBinary1 =true
ImageBaseAddr1	=0x350000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary1 = AP_FW_Images/AP0_8K.bin
ImageSize1 =0x2000
ImageAttrib1 =0x105 ; Hash Match , critical

;HT2AP1C0
[HASHTABLE0 "10" ]
NoofAPImages =0x1 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x58
HashtableImageBeginIndex =0x3
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x10000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
UseImageBinary0 =true			
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000
ImageAttrib0 =0x0 ; GImage, Byte Match

; Hash Table 1 for AP1 C1 , its for Port 1 and comp 1 to store the 
; Hash table Hashtable1AP1F1 offset in the below
; Specify fields for hash table of port 1/comp 1 for section[HASHTABLE0 "3" ] 
; If Dont want Port 1/Comp 1 , comment the below fields and section[HASHTABLE0 "3" ]
;HT0AP1C1
[HASHTABLE0 "3" ]
NoofAPImages =0x2 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x94 ; (28 + (NoofAPImages * 60))
HashtableImageBeginIndex =0x0
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x4000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000
ImageAttrib0 = 0x12110305 ; Critical, Hash Match, Primary with FB inage id 1 in C1, GImage 2 in C1

UseImageBinary1 =true
ImageBaseAddr1	=0x200000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary1 = AP_FW_Images/AP0_4M.bin
ImageSize1 =0x400000
ImageAttrib1 =0x104 ; GImage , Hash Match, Primary without FB 

;HT1AP1C1
[HASHTABLE0 "7" ]
NoofAPImages =0x1 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x58
HashtableImageBeginIndex =0x2
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x620000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000
ImageAttrib0 =0x04 ; GImage , Hash Match 


;HT2AP1C1
[HASHTABLE0 "11" ]
NoofAPImages =0x1 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x58
HashtableImageBeginIndex =0x3
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x675000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000
ImageAttrib0 =0x105 ; Hash Match ; critical

;-------------------------------------------------------------------------------------
;--------------[APCFGTABLE] Section ----------------------------------------------
;------------To Provide the AP_CFG_MEMORY_MAP 1 fields -------------------------------
;--Fields for the  Structure  AP_CFG_MEMORY_MAP BA 1 ---------------------------------
;--------[APCFGTABLE "1" ] AP_CFG_MEMORY_MAP_1 -----------------------------------
; If the AP_CFG_MEMORY_MAP_1 structure need to fill  ---------------------------------
; Repeat the below table as  [APCFGTABLE "1"]  For AP_CFG_MEMORY_MAP_1--------------
;--------------------------------------------------------------------------------------
[APCFGTABLE "1" ]
APCFGID = 0x0006 ;AP_CFG Identification, offset 0x0, size 2
APCFGRollbackREVID = 0x01 ; AP_CFG Rollback Revision ID, offset 0x02, size 2
APCFGCurrentREVMinor = 0x23 ; AP_CFG Current Revision, offset 0x02, size 2
CustomerREV= 0x01 ; Customer Revision  , offset 0x04 , size 1
AuthKeyHashSel=0x0 ; Authentication Key hash Select, offset 0x05 , size 1
CustomerId=0x01 ; Customer ID , offset 0x06 , size 1, should match OTP 988
NoofAPImages = 0xF ;  Including All images in AP0  and AP1 
Hashtableaddresstable=0x5C0 ;Hash Table address Table offset at 0x5C0. Fixed do not modify
;--------------------------------------------------------------
StagedTagPayloadBA0 =0x48000 ;Staged TAG0 Payload BA,
StagedTagSPIPortSelect0 =0
StagedTagSPIFlashComponent0 =0x0
RestoreTagPayloadBA0 =0x90000 ;Restore TAG0 Payload BA,
RestoreTagSPIPortSelect0 =0x0
RestoreTagSPIFlashComponent0 =0x0
StagedTagPayloadBA1 =0x48000 ;Staged TAG1 Payload BA,
StagedTagSPIPortSelect1 =0x0
StagedTagSPIFlashComponent1 =0x0 ;Restore TAG1 Payload BA,
RestoreTagPayloadBA1 =0x90000
RestoreTagSPIPortSelect1 =0x0
RestoreTagSPIFlashComponent1 =0x0
TAGMaxPayloadSize0 =0x400 ; TAG0 Max Payload Size ,
TAGMaxPayloadSize1 =0x400 ; TAG1 Max Payload Size ,


;Features Options 1
FEATUREOPTION1=0x60 ;Feature Options 1 , Reset control options - AP)_RESET_DET and WDTRST will put both AP0 and EXTRST in reset

;Feature Options 2
FEATUREOPTION2=0xFC ;Feature Options 2 ,AP0_RESET_DET#, FAULT_DET# , AP0_HBLED# , WDTRST1 , WDTRST2 - Enabled .  AP1_RESET_IN# - Enable

;Feature option 3
FEATUREOPTION3 =0xA0 ;Feature Options 3 , AP0 and AP1 Boot from Passing Comp and Default comp - CS0#_out
FEATUREOPTION4 =0x00 ;Feature Options  4, WDTRST1 - GPIO127, AP0_RESET_DET# pin - GPIO201

ECFWMaskRegions=0x00 ; EC_FW Mask Regions - mask disabled
ECRegionBA0 =0x0000 ; EC Region 0 BA 
ECRegionBA0SPIPortSelect =0
ECRegionBA0SPIFlashCom =0
ECRegionBA1 =0x0000 ; EC Region 1 BA 
ECRegionBA1SPIPortSelect =0
ECRegionBA1SPIFlashCom =0
ECRegionBA2 =0x0000 ; EC Region 2 BA 
ECRegionBA2SPIPortSelect =0
ECRegionBA2SPIFlashCom =0
ECRegionBA3 =0x0000 ; EC Region 3 BA 
ECRegionBA3SPIPortSelect =0
ECRegionBA3SPIFlashCom =0
ECRegionBA4 =0x0000 ; EC Region 4 BA 
ECRegionBA4SPIPortSelect =0
ECRegionBA4SPIFlashCom =0
ECRegionBA5 =0x0000 ; EC Region 5 BA 
ECRegionBA5SPIPortSelect =0
ECRegionBA5SPIFlashCom =0
ECRegionBA6 =0x0000 ; EC Region 6 BA 
ECRegionBA6SPIPortSelect =0
ECRegionBA6SPIFlashCom =0
ECRegionBA7 =0x0000 ; EC Region 7 BA 
ECRegionBA7SPIPortSelect =0
ECRegionBA7SPIFlashCom =0
I2CCommandsSupportedAP0=0xFF ; I2C Commands Supported ; Not used 
I2CCommandsSupportedAP1=0xFF ; I2C Commands Supported ; Not used
I2CCopyCommandConfigParam=0x03 ; I2C Copy Command Configuration Parameters Run time Permission for AP0 and AP1 SPI Flash enabled
AP0Comp0Size=0x17 ; AP0 Component 0 Size  , 8MB
AP0Comp1Size=0x17 ; AP0 Component 1 Size  ,8MB
AP1Comp0Size=0x19 ; AP0 Component 2 Size ,32MB
AP1Comp1Size=0x17 ; AP0 Component 3 Size ,8MB
APCFGKeyRevPerm =0x0
APCFGRollBackProtPerm=0x00000000 ; Revision 0 is decomissioned
GlacierConfigOption1=0x11; Spimon0 enable;DIV=0, HRM on GPIO 107
GlacierConfigOption2=0x11; Spimon1 enable;DIV=0, HRM on GPIO 131

GlacierConfigOption3=0xC0 ; Address wrap violation enabled for AP0 C0 and C1; Kill mode power off
GlacierConfigOption4=0xC0 ; Address wrap violation enabled for AP0 C0 and C1 ; kill mode power off
GlacierConfigOption5=0xF3; HRM active, any one boot HT pass , out of seq AP1 enabled
GlacierConfigOption6=0xC3 ; IDE Inter-Bus Intervention Enabled, 1ms units with delay value 3
GlacierConfigOption7=0x0 ; AP0 Match Fetch Timer not enabled 
GlacierConfigOption8=0x0 ; AP1 Match Fetch Timer not enabled 
GlacierConfigOption9=0x0 ; Timer for AP1 uboot not enabled, delay unit - none
GlacierConfigOption10=0x0 ; AP0 & AP1 Bytematch memory SRAM , Runtime image retries disabled

GlacierConfigOption12=0x0 ;  Timer for AP1 uboot not enabled
GlacierConfigOption13=0x0 ; No Opcode Lock with Preboot values
HOSTPORTSEL=0xEA ; AP0, AP1 and Attestation I2C Port Enabled. Use I2c Address strap option0 . SPI Select for APx - Either CSx#_IN active
HashtableAP0=0x33 ; 3HT in C0 , 3HT in C1
HashtableAP1=0x33 ; 3HT in C0 , 3HT in C1
GlacierConfigOption14=0xFC ; I2C Master CLK 1MHz,  GPIO Handshake disabled in AP0 and AP1 on I2C SDA Pin, GlacierConfigOption11 - 0xFC to diaable GPIO, 0xF0 to enabled handshake
PreBootPerOpcodesAP0Comp0R0=0xFFFFFFFF
PreBootPerOpcodesAP0Comp0R1=0xFFFFFFFF
PreBootPerOpcodesAP0Comp0R2=0xFFFFFFFF
PreBootPerOpcodesAP0Comp0R3=0xFFFFFFFF
PreBootPerOpcodesAP0Comp0R4=0xFFFFFFFF
PreBootPerOpcodesAP0Comp0R5=0xFFFFFFFF
PreBootPerOpcodesAP0Comp0R6=0xFFFFFFFF
PreBootPerOpcodesAP0Comp0R7=0xFFFFFFFF

PreBootPerOpcodesAP0Comp1R0=0xFFFFFFFF
PreBootPerOpcodesAP0Comp1R1=0xFFFFFFFF
PreBootPerOpcodesAP0Comp1R2=0xFFFFFFFF
PreBootPerOpcodesAP0Comp1R3=0xFFFFFFFF
PreBootPerOpcodesAP0Comp1R4=0xFFFFFFFF
PreBootPerOpcodesAP0Comp1R5=0xFFFFFFFF
PreBootPerOpcodesAP0Comp1R6=0xFFFFFFFF
PreBootPerOpcodesAP0Comp1R7=0xFFFFFFFF

PreBootPerOpcodesAP1Comp0R0=0xFFFFFFFF
PreBootPerOpcodesAP1Comp0R1=0xFFFFFFFF
PreBootPerOpcodesAP1Comp0R2=0xFFFFFFFF
PreBootPerOpcodesAP1Comp0R3=0xFFFFFFFF
PreBootPerOpcodesAP1Comp0R4=0xFFFFFFFF
PreBootPerOpcodesAP1Comp0R5=0xFFFFFFFF
PreBootPerOpcodesAP1Comp0R6=0xFFFFFFFF
PreBootPerOpcodesAP1Comp0R7=0xFFFFFFFF

PreBootPerOpcodesAP1Comp1R0=0xFFFFFFFF
PreBootPerOpcodesAP1Comp1R1=0xFFFFFFFF
PreBootPerOpcodesAP1Comp1R2=0xFFFFFFFF
PreBootPerOpcodesAP1Comp1R3=0xFFFFFFFF
PreBootPerOpcodesAP1Comp1R4=0xFFFFFFFF
PreBootPerOpcodesAP1Comp1R5=0xFFFFFFFF
PreBootPerOpcodesAP1Comp1R6=0xFFFFFFFF
PreBootPerOpcodesAP1Comp1R7=0xFFFFFFFF

PreBootKillmodeopcodesAP0Comp0R0 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp0R1 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp0R2 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp0R3 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp0R4 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp0R5 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp0R6 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp0R7 =0xFFFFFFFF

PreBootKillmodeopcodesAP0Comp1R0 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp1R1 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp1R2 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp1R3 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp1R4 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp1R5 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp1R6 =0xFFFFFFFF
PreBootKillmodeopcodesAP0Comp1R7 =0xFFFFFFFF

PreBootKillmodeopcodesAP1Comp0R0 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp0R1 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp0R2 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp0R3 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp0R4 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp0R5 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp0R6 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp0R7 =0xFFFFFFFF

PreBootKillmodeopcodesAP1Comp1R0 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp1R1 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp1R2 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp1R3 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp1R4 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp1R5 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp1R6 =0xFFFFFFFF
PreBootKillmodeopcodesAP1Comp1R7 =0xFFFFFFFF

PostBootPerOpcodesAP0Comp0R0=0xFFFFFFFF
PostBootPerOpcodesAP0Comp0R1=0xFFFFFFFF
PostBootPerOpcodesAP0Comp0R2=0xFFFFFFFF
PostBootPerOpcodesAP0Comp0R3=0xFFFFFFFF
PostBootPerOpcodesAP0Comp0R4=0xFFFFFFFF
PostBootPerOpcodesAP0Comp0R5=0xFFFFFFFF
PostBootPerOpcodesAP0Comp0R6=0xFFFFFFFF
PostBootPerOpcodesAP0Comp0R7=0xFFFFFFFF

PostBootPerOpcodesAP0Comp1R0=0xFFFFFFFF
PostBootPerOpcodesAP0Comp1R1=0xFFFFFFFF
PostBootPerOpcodesAP0Comp1R2=0xFFFFFFFF
PostBootPerOpcodesAP0Comp1R3=0xFFFFFFFF
PostBootPerOpcodesAP0Comp1R4=0xFFFFFFFF
PostBootPerOpcodesAP0Comp1R5=0xFFFFFFFF
PostBootPerOpcodesAP0Comp1R6=0xFFFFFFFF
PostBootPerOpcodesAP0Comp1R7=0xFFFFFFFF

PostBootPerOpcodesAP1Comp0R0=0xFFFFFFFF
PostBootPerOpcodesAP1Comp0R1=0xFFFFFFFF
PostBootPerOpcodesAP1Comp0R2=0xFFFFFFFF
PostBootPerOpcodesAP1Comp0R3=0xFFFFFFFF
PostBootPerOpcodesAP1Comp0R4=0xFFFFFFFF
PostBootPerOpcodesAP1Comp0R5=0xFFFFFFFF
PostBootPerOpcodesAP1Comp0R6=0xFFFFFFFF
PostBootPerOpcodesAP1Comp0R7=0xFFFFFFFF

PostBootPerOpcodesAP1Comp1R0=0xFFFFFFFF
PostBootPerOpcodesAP1Comp1R1=0xFFFFFFFF
PostBootPerOpcodesAP1Comp1R2=0xFFFFFFFF
PostBootPerOpcodesAP1Comp1R3=0xFFFFFFFF
PostBootPerOpcodesAP1Comp1R4=0xFFFFFFFF
PostBootPerOpcodesAP1Comp1R5=0xFFFFFFFF
PostBootPerOpcodesAP1Comp1R6=0xFFFFFFFF
PostBootPerOpcodesAP1Comp1R7=0xFFFFFFFF

PostBootKillmodeopcodesAP0Comp0R0=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp0R1=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp0R2=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp0R3=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp0R4=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp0R5=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp0R6=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp0R7=0xFFFFFFFF

PostBootKillmodeopcodesAP0Comp1R0=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp1R1=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp1R2=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp1R3=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp1R4=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp1R5=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp1R6=0xFFFFFFFF
PostBootKillmodeopcodesAP0Comp1R7=0xFFFFFFFF

PostBootKillmodeopcodesAP1Comp0R0=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp0R1=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp0R2=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp0R3=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp0R4=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp0R5=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp0R6=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp0R7=0xFFFFFFFF

PostBootKillmodeopcodesAP1Comp1R0=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp1R1=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp1R2=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp1R3=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp1R4=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp1R5=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp1R6=0xFFFFFFFF
PostBootKillmodeopcodesAP1Comp1R7=0xFFFFFFFF
NoofMemoryRegion=0x01040108 ; 8 for AP0 C0 ,4 in AP1C0 and  1 for AP0/AP1 C1

;AP0 Memory region 0
MemoryAccessProtectBA=0x0 ; AP0Comp0 run time start address	
MemoryAccessProtect=0x1 ; (size in  4k aligned)/4k ; 0x1000/0x1000 (i.e) 0x1; run time end address
AccessPreBootAPboot=0x90 ; read only , CS0
AccessPostBootAPboot=0x90 ; read only, CS0

;AP0 Memory region 1
MemoryAccessProtectBA1=0x1000 ; Ap0 comp0 run time start address
MemoryAccessProtect1=0x34F ; run time end address
AccessPreBootAPboot1=0x90 ; read only , CS0
AccessPostBootAPboot1=0x80 ;none are allowed , CS0

;AP0 Memory region 2
MemoryAccessProtectBA2=0x350000 ; Ap0 comp0 run time start address
MemoryAccessProtect2=0x600 ; run time end address ,all available sectors  from base address
AccessPreBootAPboot2=0xB1  ; read ,wr and 32K erase, CS0
AccessPostBootAPboot2=0xF7 ; read, wr , 64 & 32k erase ,  CS0

;AP0Memory region 3
MemoryAccessProtectBA3=0x600000 ;AP0 C1
MemoryAccessProtect3=0x2B0;
AccessPreBootAPboot3=0xB0 ; wr, read, CS0
AccessPostBootAPboot3=0x80 ; none, , CS0

;AP0 Memory region 4
MemoryAccessProtectBA4=0x600000
MemoryAccessProtect4=0x2C0;
AccessPreBootAPboot4=0x93 ; 32k  & 64K erase, read, CS0
AccessPostBootAPboot4=0xF7 ; read , wr, erase 32k &84K, , CS0

;AP0 Memory region 5
MemoryAccessProtectBA5=0x8C0000
MemoryAccessProtect5=0x500
AccessPreBootAPboot5=0x93 ; read  , erase`, CS0
AccessPostBootAPboot5=0xA0 ; write only, , CS0

;AP0 Memory region 6
MemoryAccessProtectBA6=0xDC0000
MemoryAccessProtect6=0x600
AccessPreBootAPboot6=0xF7 ; read , wr, erase, CS0
AccessPostBootAPboot6=0xF0 ; read, erase, CS0

;AP0 Memory region 7
MemoryAccessProtectBA7=0x13C0000
MemoryAccessProtect7=0xC40
AccessPreBootAPboot7=0xF7 ; read wr, erase, CS0
AccessPostBootAPboot7=0x90; read only, CS0

;AP0 Memory region 8
MemoryAccessProtectBA8=0x0
MemoryAccessProtect8=0x2000
AccessPreBootAPboot8=0xFF  ;  read , wr, erase, CS1
AccessPostBootAPboot8=0x98 ; read only, CS1

;AP0 Memory region 9
; MemoryAccessProtectBA9=0x0
; MemoryAccessProtect9=0x0
; AccessPreBootAPboot9=0x0 ,
; AccessPostBootAPboot9=0x0

;AP0 Memory region 10
; MemoryAccessProtectBA10=0x0
; MemoryAccessProtect10=0x0
; AccessPreBootAPboot10=0x0
; AccessPostBootAPboot10=0x0

;AP0 Memory region 11
; MemoryAccessProtectBA11=0x0
; MemoryAccessProtect11=0x0
; AccessPreBootAPboot11=0x0
; AccessPostBootAPboot11=0x0

;AP0 Memory region 12
; MemoryAccessProtectBA12=0x0
; MemoryAccessProtect12=0x0
; AccessPreBootAPboot12=0x0
; AccessPostBootAPboot12=0x0

;AP0 Memory region 13
; MemoryAccessProtectBA13=0x0
; MemoryAccessProtect13=0x0
; AccessPreBootAPboot13=0x0
; AccessPostBootAPboot13=0x0

;AP0 Memory region 14
; MemoryAccessProtectBA14=0x0
; MemoryAccessProtect14=0x0
; AccessPreBootAPboot14=0x0
; AccessPostBootAPboot14=0x0

;AP0 Memory region 15
; MemoryAccessProtectBA15=0x0
; MemoryAccessProtect15=0x0
; AccessPreBootAPboot15=0x0
; AccessPostBootAPboot15=0x0

;AP1 Memory region 0
MemoryAccessProtectBA16=0x01 ; AP1 comp 0 run time start address
MemoryAccessProtect16=0x100; run time end address(1MB protection/0x1000)
AccessPreBootAPboot16=0xF7 ; all operations allowed, CS0
AccessPostBootAPboot16=0x80 ; none allowed, , CS0

;AP1 Memory region 1
MemoryAccessProtectBA17=0x100001 ; AP1 comp 0 run time start address
MemoryAccessProtect17=0x500 ; run time end address
AccessPreBootAPboot17=0x90 ; read only, CS0
AccessPostBootAPboot17=0xF7 ; all operations allowed, CS0

;AP1 Memory region 2
MemoryAccessProtectBA18=0x600001 ; AP1 comp 0 run time start address
MemoryAccessProtect18=0xFFFF; run time end address
AccessPreBootAPboot18=0xF7 ; all operations allowed, CS0
AccessPostBootAPboot18=0x90 ; read only , CS0

;AP1 Memory region 3
MemoryAccessProtectBA19=0x2000001 ; AP1 comp 0 run time start address
MemoryAccessProtect19=0xFE000; run time end address up to 4GB
AccessPreBootAPboot19=0x90 ;  read only , CS0
AccessPostBootAPboot19=0xF7 ; all operations allowed, CS0

;AP1 Memory region 4
MemoryAccessProtectBA20=0x80001 ; AP1 comp 0 run time start address
MemoryAccessProtect20=0xFFFFF ; (protect all sectors from address 0x80000)
AccessPreBootAPboot20=0x98 ; read only , CS1
AccessPostBootAPboot20=0xFF ; all operations allowed, CS1

;AP1 Memory region 5
; MemoryAccessProtectBA21=0x5
; MemoryAccessProtect21=0x6
; AccessPreBootAPboot21=0x7
; AccessPostBootAPboot21=0x8

;AP1 Memory region 6
; MemoryAccessProtectBA22=0x1
; MemoryAccessProtect22=0x2
; AccessPreBootAPboot22=0x3
; AccessPostBootAPboot22=0x4

;AP1 Memory region 7
; MemoryAccessProtectBA23=0x5
; MemoryAccessProtect23=0x6
; AccessPreBootAPboot23=0x7
; AccessPostBootAPboot23=0x8

;AP1 Memory region 8
; MemoryAccessProtectBA24=0x1
; MemoryAccessProtect24=0x2
; AccessPreBootAPboot24=0x3
; AccessPostBootAPboot24=0x4

;AP1 Memory region 9
; MemoryAccessProtectBA25=0x5
; MemoryAccessProtect25=0x6
; AccessPreBootAPboot25=0x7
; AccessPostBootAPboot25=0x8

;AP1 Memory region 10
; MemoryAccessProtectBA26=0x1
; MemoryAccessProtect26=0x2
; AccessPreBootAPboot26=0x3
; AccessPostBootAPboot26=0x4

;AP1 Memory region 11
; MemoryAccessProtectBA27=0x5
; MemoryAccessProtect27=0x6
; AccessPreBootAPboot27=0x7
; AccessPostBootAPboot27=0x8

;AP1 Memory region 12
; MemoryAccessProtectBA28=0x1
; MemoryAccessProtect28=0x2
; AccessPreBootAPboot28=0x3
; AccessPostBootAPboot28=0x4

;AP1 Memory region 13
; MemoryAccessProtectBA29=0x5
; MemoryAccessProtect29=0x6
; AccessPreBootAPboot29=0x7
; AccessPostBootAPboot29=0x8

;AP1 Memory region 14
; MemoryAccessProtectBA30=0x1
; MemoryAccessProtect30=0x2
; AccessPreBootAPboot30=0x3
; AccessPostBootAPboot30=0x4

;AP1 Memory region 15
; MemoryAccessProtectBA31=0x5
; MemoryAccessProtect31=0x6
; AccessPreBootAPboot31=0x7
; AccessPostBootAPboot31=0x8

LockopcodesFlashes=0x0 ;lock opcodes not enabled

I2CcommandssupportedAttestation =0x1000
I2CAddressOption0AP0 =0x11
I2CAddressOption0AP1 =0x22
I2CAddressOption0Attestation =0x64 ;I2C slave address of EC (Attestation port), this is not fixed, its for test purpose
I2CAddressOption1AP0 =0x74
I2CAddressOption1AP1 =0x62
I2CAddressOption1Attestation =0x40
I2CAddressOption2AP0 =0x54
I2CAddressOption2AP1 =0x52
I2CAddressOption2Attestation =0x40    
I2CAddressOption3AP0 =0x80
I2CAddressOption3AP1 =0x72
I2CAddressOption3Attestation =0x40
;Slot 1 contains chain 2  which has -> Root ca certificate (cert 3) ->  DEVIK certificate(cert 2) -> DEV AK certificate( cert 0)
HeadPointer0 =0x40
HeadPointer1 =0x40
HeadPointer2 =0x03 ;Bits[5:0] Head Pointer for Chain 2 points to certificate 3 (pca)
HeadPointer3 =0x40
HeadPointer4 =0x40
HeadPointer5 =0x40
HeadPointer6 =0x40
HeadPointer7 =0x40

;//tail pointer for certificate 0 - 0x40 (end of chain)
;//tail pointer for certificate 1 - no certificate 1 exist in this chain configuration hence 0xff
;//tail pointer for certificate 2 - 0x00 -> cert 2 points to cert 0
;//tail pointer for certificate 3 - 0x02 -> cert 3 points to cert 2
TailPointerCertificate  =0x40FF0002FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
;Bits[7:4] Slot 1 Certificate Chain Assignment = 2h
;slot 1 contains chain 2, all other slots no chain present (hence 8h)
CertChainSlotAssignment01 =0x28
CertChainSlotAssignment23 =0x88
CertChainSlotAssignment45 =0x88
CertChainSlotAssignment67 =0x88
;eid fixed as 0x94 If I2CADDR[1:0]= 00
EID0 =0x94  ;test data for static EID
EID1 =0x40
EID2 =0x40
EID3 =0x40
EID4 =0x40

EMCChannelEnable =0x00  ; EMC Channels Disabled
VTRPLLLimits =0xFF00
VTR2Limits =0xFF00
VTR1Limits =0xFF00
VRCAPLimits =0xFF00
VTRREGLimits =0xFF00
VTRANALOGLimits =0xFF00
InternalTempLimits =0xFF00
EMCFaultResponse =0x0

PLDMdevicedescriptoroverride  =0x0	
DeviceIdentifierLength  =0x0
Descriptorcount  =0x0
Descriptor  =0x0000025510022143
CapabilitiesDuringUpgrade  =0x0
Componentclassification  =0x0
TID  =0x0


;HT0 for all components
;HT0AP0C0
Hashtable0AP0F0 =0x120000
Hashtable0AP0F0SPIPortSelect =0x0 ; Fixed Dont change 
Hashtable0AP0F0SPIFlashComp =0x00 ; Fixed Dont change 
HashtableAttr0AP0F0 =0x3 ; Boot HT

;HT0AP0C1
Hashtable0AP0F1 =0x120000
Hashtable0AP0F1SPIPortSelect =0x00 ; Fixed Dont change 
Hashtable0AP0F1SPIFlashComp =0x01 ; Fixed Dont change 
HashtableAttr0AP0F1=0x3 ; Boot HT

;HT0AP1C0
Hashtable1AP1F0 =0x120000
Hashtable1AP1F0SPIPortSelect =0x01 ; Fixed Dont change 
Hashtable1AP1F0SPIFlashComp =0x00 ; Fixed Dont change 
HashtableAttr1AP1F0=0x3 ; Boot HT

;HT0AP1C1
Hashtable1AP1F1 =0x120000
Hashtable1AP1F1SPIPortSelect =0x01 ; Fixed Dont change 
Hashtable1AP1F1SPIFlashComp =0x01 ; Fixed Dont change 
HashtableAttr1AP1F1=0x3 ; Boot HT

;HT1 for all components
;HT1AP0C0
SHashtable0AP0F0 =0x130000
SHashtable0AP0F0SPIPortSelect =0x0
SHashtable0AP0F0SPIFlashComp =0x00
SHashtableAttr0AP0F0=0x3 ; Boot HT

;HT1AP0C1
SHashtable0AP0F1 =0x130000
SHashtable0AP0F1SPIPortSelect =0x00
SHashtable0AP0F1SPIFlashComp =0x01
SHashtableAttr0AP0F1=0x0 ; Recovery HT 

;HT1AP1C0
SHashtable1AP1F0 =0x130000
SHashtable1AP1F0SPIPortSelect =0x01
SHashtable1AP1F0SPIFlashComp =0x00
SHashtableAttr1AP1F0=0x3 ; Boot HT

;HT1AP1C1
SHashtable1AP1F1 =0x130000
SHashtable1AP1F1SPIPortSelect =0x01
SHashtable1AP1F1SPIFlashComp =0x01
SHashtableAttr1AP1F1=0x0 ;Recovery HT

;HT2 for all components
;HT2AP0C0
FHashtable0AP0F0 =0x140000
FHashtable0AP0F0SPIPortSelect =0x0
FHashtable0AP0F0SPIFlashComp =0x00
FHashtableAttr0AP0F0=0x0 ;Recovery HT

;HT2AP0C1
FHashtable0AP0F1 =0x140000
FHashtable0AP0F1SPIPortSelect =0x00
FHashtable0AP0F1SPIFlashComp =0x01
FHashtableAttr0AP0F1=0x3 ;Boot HT

;HT2AP1C0
FHashtable1AP1F0 =0x140000
FHashtable1AP1F0SPIPortSelect =0x01
FHashtable1AP1F0SPIFlashComp =0x00
FHashtableAttr1AP1F0=0x0 ;Recovery HT

;HT2AP1C1
FHashtable1AP1F1 =0x140000
FHashtable1AP1F1SPIPortSelect =0x01
FHashtable1AP1F1SPIFlashComp =0x01
FHashtableAttr1AP1F1=0x3; Boot HT


;Redundant HT0 for all components
RHashtable0AP0F0 =0x150000
RHashtable0AP0F0SPIPortSelect =0x0
RHashtable0AP0F0SPIFlashComp =0x00
RHashtableAttr0AP0F0=0x3


RHashtable0AP0F1 =0x150000
RHashtable0AP0F1SPIPortSelect =0x00
RHashtable0AP0F1SPIFlashComp =0x01
RHashtableAttr0AP0F1=0x3

RHashtable1AP1F0 =0x150000
RHashtable1AP1F0SPIPortSelect =0x01
RHashtable1AP1F0SPIFlashComp =0x00
RHashtableAttr1AP1F0=0x3

RHashtable1AP1F1 =0x150000
RHashtable1AP1F1SPIPortSelect =0x01
RHashtable1AP1F1SPIFlashComp =0x01
RHashtableAttr1AP1F1=0x3

;Redundant HT1 for all components
RSHashtable0AP0F0 =0x160000
RSHashtable0AP0F0SPIPortSelect =0x0
RSHashtable0AP0F0SPIFlashComp =0x00
RSHashtableAttr0AP0F0=0x3

RSHashtable0AP0F1 =0x160000
RSHashtable0AP0F1SPIPortSelect =0x00
RSHashtable0AP0F1SPIFlashComp =0x01
RSHashtableAttr0AP0F1=0x0

RSHashtable1AP1F0 =0x160000
RSHashtable1AP1F0SPIPortSelect =0x01
RSHashtable1AP1F0SPIFlashComp =0x00
RSHashtableAttr1AP1F0=0x3

RSHashtable1AP1F1 =0x160000
RSHashtable1AP1F1SPIPortSelect =0x01
RSHashtable1AP1F1SPIFlashComp =0x01
RSHashtableAttr1AP1F1=0x0

;Redundant HT2 for all components
RFHashtable0AP0F0 =0x170000
RFHashtable0AP0F0SPIPortSelect =0x0
RFHashtable0AP0F0SPIFlashComp =0x00
RFHashtableAttr0AP0F0=0x0

RFHashtable0AP0F1 =0x170000
RFHashtable0AP0F1SPIPortSelect =0x00
RFHashtable0AP0F1SPIFlashComp =0x01
RFHashtableAttr0AP0F1=0x3

RFHashtable1AP1F0 =0x170000
RFHashtable1AP1F0SPIPortSelect =0x01
RFHashtable1AP1F0SPIFlashComp =0x00
RFHashtableAttr1AP1F0=0x0

RFHashtable1AP1F1 =0x170000
RFHashtable1AP1F1SPIPortSelect =0x01
RFHashtable1AP1F1SPIFlashComp =0x01
RFHashtableAttr1AP1F1=0x3

;64 bytes for Staged Image Location for AP_FW update SImageBA0 to SImageBA15
;AP_FW0
SImageBA0 =0xA0000
SSPIPortSelect0=0x0
SSPIFlashComp0 =0x0

;AP_FW1
SImageBA1 =0xB0000
SSPIPortSelect1=0x0
SSPIFlashComp1 =0x0

;AP_FW2
SImageBA2 =0xA0000
SSPIPortSelect2=0x0
SSPIFlashComp2 =0x0

;AP_FW3
SImageBA3 =0xA0000
SSPIPortSelect3=0x0
SSPIFlashComp3 =0x0

;AP_FW4
SImageBA4 =0xA0000
SSPIPortSelect4=0x0
SSPIFlashComp4 =0x0

;AP_FW5
SImageBA5 =0xA0000
SSPIPortSelect5=0x0
SSPIFlashComp5 =0x0

;AP_FW6
SImageBA6 =0xA0000
SSPIPortSelect6=0x0
SSPIFlashComp6 =0x0

;AP_FW7
SImageBA7 =0xA0000
SSPIPortSelect7=0x0
SSPIFlashComp7 =0x0

;AP_FW8
SImageBA8 =0xA0000
SSPIPortSelect8=0x0
SSPIFlashComp8 =0x0

;AP_FW9
SImageBA9 =0xA0000
SSPIPortSelect9=0x0
SSPIFlashComp9 =0x0

;AP_FW10
SImageBA10 =0xA0000
SSPIPortSelect10=0x0
SSPIFlashComp10 =0x0

;AP_FW11
SImageBA11 =0xA0000
SSPIPortSelect11=0x0
SSPIFlashComp11 =0x0

;AP_FW12
SImageBA12 =0xA0000
SSPIPortSelect12=0x0
SSPIFlashComp12 =0x0

;AP_FW13
SImageBA13 =0xA0000
SSPIPortSelect13=0x0
SSPIFlashComp13 =0x0

;AP_FW14
SImageBA14 =0xA0000
SSPIPortSelect14=0x1
SSPIFlashComp14 =0x0

;AP_FW15
SImageBA15 =0xA0000
SSPIPortSelect15=0x0
SSPIFlashComp15 =0x0

; 48 bytes for Staged Image Location for Hash table for SImageBA16 to SImageBA27
;HT0AP0C0
SImageBA16 =0x180000
SSPIPortSelect16=0x00
SSPIFlashComp16 =0x00

;HT0AP0C1
SImageBA17 =0x180000
SSPIPortSelect17=0x00
SSPIFlashComp17 =0x01

;HT0AP1C0
SImageBA18 =0x180000
SSPIPortSelect18=0x01
SSPIFlashComp18 =0x00

;HT0AP1C1
SImageBA19 =0x180000
SSPIPortSelect19=0x01
SSPIFlashComp19 =0x01

;HT1AP0C0
SImageBA20 =0x190000
SSPIPortSelect20=0x00
SSPIFlashComp20 =0x00

;HT1AP0C1
SImageBA21 =0x190000
SSPIPortSelect21=0x00
SSPIFlashComp21 =0x01

;HT1AP1C0
SImageBA22 =0x190000
SSPIPortSelect22=0x01
SSPIFlashComp22 =0x00

;HT1AP1C1
SImageBA23 =0x190000
SSPIPortSelect23=0x01
SSPIFlashComp23 =0x01

;HT2AP0C0
SImageBA24 =0x200000
SSPIPortSelect24=0x0
SSPIFlashComp24 =0x0

;HT2AP0C1
SImageBA25 =0x200000
SSPIPortSelect25=0x0
SSPIFlashComp25 =0x1

;HT2AP1C0
SImageBA26 =0x200000
SSPIPortSelect26=0x1
SSPIFlashComp26 =0x0

;HT2AP1C1
SImageBA27 =0x200000
SSPIPortSelect27=0x1
SSPIFlashComp27 =0x1

;Restore Image Location AP0, Restore location for APCFG0
RImageBA0=0x101000 ; Restore Image n Base Address , offset 0x40h*n +0x30,size 4
RSPIPortSelect0=0x0
RSPIFlashComp0=0x0

;Restore Image Location AP1,  Restore location for APCFG1
RImageBA1=0x101000 ; Restore Image n Base Address , offset 0x40h*n +0x30,size 4
RSPIPortSelect1=0x1
RSPIFlashComp1=0x0

; 120 bytes for the Restore Image location for AP_FW update and Hash table ; start from RImageBA2 to RImageBA31
;AP_FW0
RImageBA2=0xA0000 ; 
RSPIPortSelect2=0x0
RSPIFlashComp2=0x0

;AP_FW1
RImageBA3=0xA0000 ; 
RSPIPortSelect3=0x0
RSPIFlashComp3=0x0

;AP_FW2
RImageBA4=0xA0000 ; 
RSPIPortSelect4=0x0
RSPIFlashComp4=0x0

;AP_FW3
RImageBA5=0xA0000 ; 
RSPIPortSelect5=0x0
RSPIFlashComp5=0x0

;AP_FW4
RImageBA6=0xA0000 ; 
RSPIPortSelect6=0x0
RSPIFlashComp6=0x0

;AP_FW5
RImageBA7=0xA0000 ; 
RSPIPortSelect7=0x0
RSPIFlashComp7=0x0

;AP_FW6
RImageBA8=0xA0000 ; 
RSPIPortSelect8=0x0
RSPIFlashComp8=0x0

;AP_FW7
RImageBA9=0xA0000 ; 
RSPIPortSelect9=0x0
RSPIFlashComp9=0x0

;AP_FW8
RImageBA10=0xA0000 ; 
RSPIPortSelect10=0x0
RSPIFlashComp10=0x0

;AP_FW9
RImageBA11=0xA0000 ; 
RSPIPortSelect11=0x0
RSPIFlashComp11=0x0

;AP_FW10
RImageBA12=0xA0000 ; 
RSPIPortSelect12=0x0
RSPIFlashComp12=0x0

;AP_FW11
RImageBA13=0xA0000 ; 
RSPIPortSelect13=0x0
RSPIFlashComp13=0x0

;AP_FW12
RImageBA14=0xA0000 ; 
RSPIPortSelect14=0x0
RSPIFlashComp14=0x0

;AP_FW13
RImageBA15=0xA0000 ; 
RSPIPortSelect15=0x0
RSPIFlashComp15=0x0

;AP_FW14
RImageBA16=0xA0000 ; 
RSPIPortSelect16=0x0
RSPIFlashComp16=0x0

;AP_FW15
RImageBA17=0xA0000 ; 
RSPIPortSelect17=0x0
RSPIFlashComp17=0x0

; HASH TABLE Restore location 
; HT0AP0C0
RImageBA18=0x181000 ; 
RSPIPortSelect18=0x0
RSPIFlashComp18=0x0

; HT0AP0C1
RImageBA19=0x181000 ; 
RSPIPortSelect19=0x0
RSPIFlashComp19=0x1

; HT0AP1C0
RImageBA20=0x181000 ; 
RSPIPortSelect20=0x1
RSPIFlashComp20=0x0

; HT0AP1C1
RImageBA21=0x181000 ; 
RSPIPortSelect21=0x1
RSPIFlashComp21=0x1

; HT1AP0C0
RImageBA22=0x191000 ; 
RSPIPortSelect22=0x0
RSPIFlashComp22=0x0

; HT1AP0C1
RImageBA23=0x191000 ; 
RSPIPortSelect23=0x0
RSPIFlashComp23=0x1

; HT1AP1C0
RImageBA24=0x191000 ; 
RSPIPortSelect24=0x1
RSPIFlashComp24=0x0

; HT1AP1C1
RImageBA25=0x191000 ; 
RSPIPortSelect25=0x1
RSPIFlashComp25=0x1

; HT2AP0C0
RImageBA26=0x201000 ; 
RSPIPortSelect26=0x0
RSPIFlashComp26=0x0

; HT2AP0C1
RImageBA27=0x201000 ; 
RSPIPortSelect27=0x0
RSPIFlashComp27=0x1

; HT2AP1C0
RImageBA28=0x201000 ; 
RSPIPortSelect28=0x1
RSPIFlashComp28=0x0

; HT2AP1C1
RImageBA29=0x201000 ; 
RSPIPortSelect29=0x1
RSPIFlashComp29=0x1

; STAGED FOR AP_CFG
;APCFG0
RImageBA30=0x100000 ; 
RSPIPortSelect30=0x0
RSPIFlashComp30=0x0

;APCFG1
RImageBA31=0x100000 ; 
RSPIPortSelect31=0x1
RSPIFlashComp31=0x0


UseMCHPECDSA = true  ; AP_CFG Table Co-Signature offset AP_FW image map
MCHPECDSAPrivKeyFile =Keys/input_test_keys/ec384.pem 
MCHPECDSAPrivKeyPassword =ec384

;;=============================================================================================================================================;;
; Hash Table 0 For AP0 C0 , its for Port 0 and comp 0 to store the 
; Hash table Hashtable0AP0F0 offset in the below
; Specify fields for hash table of port 0/comp 0 for section[HASHTABLE0 "0" ] 
; If Dont want Port 0/Comp 0 , comment the below fields and section[HASHTABLE0 "0" ]
; HT0AP0C0 - Hash Table 0 For AP0C0
[HASHTABLE1 "0" ]
NoofAPImages =0x2 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x94 ; (28 + (NoofAPImages * 60))
HashtableImageBeginIndex =0x0
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x4000 ; Image n Base Address, offset 0x40h*n +0x00,size 4. Byte match should be in 8k boundary adress	
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000 ; Specify the length of the binary in bytes , the tool will covert to 64 or 8k chuncks
ImageAttrib0 = 0x03000501 ; Byte match , Primary with GImage id 3 in C0

UseImageBinary1 =true
ImageBaseAddr1	=0x560000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary1 = AP_FW_Images/AP0_1K.bin
ImageSize1 =0x400
ImageAttrib1 =0x104 ; Hash match ; used as first hash match image, uboot main

;HT1AP0C0 
[HASHTABLE1 "4" ]
NoofAPImages =0x1 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x58 ; (28 + (NoofAPImages * 60))
HashtableImageBeginIndex =0x2
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned	

UseImageBinary0 =true
ImageBaseAddr0	=0x350000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary0 = AP_FW_Images/AP0_2M.bin
ImageSize0 =0x200000
ImageAttrib0 =0x105 ; Hash Match ,  critical


;HT2AP0C0
[HASHTABLE1 "8" ]
NoofAPImages =0x1 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x58 ; (28 + (NoofAPImages * 60))
HashtableImageBeginIndex =0x3
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x10000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
UseImageBinary0 =true			
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000
ImageAttrib0 =0x0 ; GImage, Byte Match

; Hash Table 0 for AP0 C1 , its for Port 0 and comp 1 to store the 
; Hash table Hashtable0AP0F1 offset in the below
; Specify fields for hash table of port 0/comp 1 for section[HASHTABLE0 "1" ] 
; If Dont want Port 0/Comp 1 , comment the below fields and section[HASHTABLE0 "1" ]
;HT0AP0C1
[HASHTABLE1 "1" ]
NoofAPImages =0x2 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x94 ; (28 + (NoofAPImages * 60))
HashtableImageBeginIndex =0x0
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x4000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000
ImageAttrib0 = 0x03000500; Byte Match, without FB, has Gimage 3 in C0

UseImageBinary1 =true
ImageBaseAddr1	=0x200000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary1 = AP_FW_Images/AP0_4M.bin
ImageSize1 =0x400000
ImageAttrib1 =0x104 ;  Hash Match , Primary without FB

;HT1AP0C1
[HASHTABLE1 "5" ]
NoofAPImages =0x1 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x58
HashtableImageBeginIndex =0x2
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x662000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000
ImageAttrib0 =0x105 ;  Hash Match ; Primary without FB, critical

;HT2AP0C1
[HASHTABLE1 "9" ]
NoofAPImages =0x1 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x58
HashtableImageBeginIndex =0x3
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x665000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000
ImageAttrib0 =0x00110305 ;  Hash Match , FB Image id 1 in C1


; Hash Table 1 for AP1 C0 , its for Port 1 and comp 0 to store the 
; Hash table Hashtable1AP1F0 offset in the below
; Specify fields for hash table of port 1/comp 0 for section[HASHTABLE0 "2" ] 
; If Dont want Port 1/Comp 0 , comment the below fields and section[HASHTABLE0 "2" ]
;HT0AP1C0
[HASHTABLE1 "2" ]
NoofAPImages =0x1 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x58 ; (28 + (NoofAPImages * 60))
HashtableImageBeginIndex =0x0
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x4000 ; Image n Base Address, offset 0x40h*n +0x00,size 4		
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000 ; Specify the length of the binary in bytes , the tool will covert to 64 or 8k chuncks
ImageAttrib0 = 0x03000501 ; Byte match , Primary with GImage id 3 in C0

;HT1AP1C0
[HASHTABLE1 "6" ]
NoofAPImages =0x2 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x94
HashtableImageBeginIndex =0x1
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x560000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary0 = AP_FW_Images/AP0_1K.bin
ImageSize0 =0x400
ImageAttrib0 =0x104 ; Hash Match 

UseImageBinary1 =true
ImageBaseAddr1	=0x350000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary1 = AP_FW_Images/AP0_8K.bin
ImageSize1 =0x2000
ImageAttrib1 =0x105 ; Hash Match , critical

;HT2AP1C0
[HASHTABLE1 "10" ]
NoofAPImages =0x1 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x58
HashtableImageBeginIndex =0x3
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x10000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
UseImageBinary0 =true			
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000
ImageAttrib0 =0x0 ; GImage, Byte Match

; Hash Table 1 for AP1 C1 , its for Port 1 and comp 1 to store the 
; Hash table Hashtable1AP1F1 offset in the below
; Specify fields for hash table of port 1/comp 1 for section[HASHTABLE0 "3" ] 
; If Dont want Port 1/Comp 1 , comment the below fields and section[HASHTABLE0 "3" ]
;HT0AP1C1
[HASHTABLE1 "3" ]
NoofAPImages =0x2 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x94 ; (28 + (NoofAPImages * 60))
HashtableImageBeginIndex =0x0
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x4000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000
ImageAttrib0 = 0x12110305 ; Critical, Hash Match, Primary with FB inage id 1 in C1, GImage 2 in C1

UseImageBinary1 =true
ImageBaseAddr1	=0x200000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary1 = AP_FW_Images/AP0_4M.bin
ImageSize1 =0x400000
ImageAttrib1 =0x104 ; GImage , Hash Match, Primary without FB 

;HT1AP1C1
[HASHTABLE1 "7" ]
NoofAPImages =0x1 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x58
HashtableImageBeginIndex =0x2
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x620000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000
ImageAttrib0 =0x04 ; GImage , Hash Match 


;HT2AP1C1
[HASHTABLE1 "11" ]
NoofAPImages =0x1 ;  number of AP FW image 
HashtableID =0x02
Authkeysel =0x0
HashtableminorREV =0x45
HashtablemajorREV =0x01
Hashtablesize =0x58
HashtableImageBeginIndex =0x3
KeyRevPermission =0x00
RollbackProtPerm127096 =0x00000000 ; 
RollbackProtPerm095064 =0x00000000 ; 
RollbackProtPerm063032 =0x00000000 ;
RollbackProtPerm031000 =0x00000000 ; Revisions 0 is decomissioned

UseImageBinary0 =true
ImageBaseAddr0	=0x675000 ; Image n Base Address, offset 0x40h*n +0x00,size 4
Imagebinary0 = AP_FW_Images/AP0_8K.bin
ImageSize0 =0x2000
ImageAttrib0 =0x105 ; Hash Match ; critical


;-------------------------------------------------------------------------------------
;--------------[APKEY "0"] Section ------------------------------------------------
;------------To Provide the AP_FW_KEY Storage area fields---------------------------
;--Fields for the  Structure  AP_FW KEY STORAGE --------------------------------------
;---- It stores 32 public key area --------------------------------------------------
;---It start at the APPubKeyBA in the [APCFGTABLE "0"] of the memory map table 0---
;---It start at the APPubKeyBA in the [APCFGTABLE "1"] of the memory map table 1---
; If suppose two public key , repeat the table with two times mentioned below--------
;--------------------------------------------------------------------------------------
; AP_FW IMAGE MEMORY MAP TABLE 
[APKEY "0" ]
APPrivateKeyFile=Keys/input_test_keys/ec384_plain_priv.pem
APPublicKeyFile=Keys/input_test_keys/ec384_pub.pem


[APKEY "1" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_2.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_2.pem

[APKEY "2" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_3.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_3.pem

[APKEY "3" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_3.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_3.pem

[APKEY "4" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "5" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_5.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_5.pem


[APKEY "6" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "7" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "8" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "9" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "10" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "11" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "12" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "13" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "14" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "15" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "16" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "17" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "18" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "19" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "20" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "21" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "22" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "23" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "24" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "25" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "26" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "27" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "28" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "29" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "30" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[APKEY "31" ]
APPrivateKeyFile=Keys/input_test_keys/ec_384_4.pem
APPublicKeyFile=Keys/input_test_keys/ec_e384_pub_4.pem

[IMAGE "0"] ; TAG0 Image A  , B
ImageLocation = 0x20000
SpiFreqMHz = 12
SpiReadCommand = fast
SpiDriveStrength = 4
SpiSlewFast = false
SpiSignalControl = 0x00
IMG1BinFile = CEC173x_GEN3_secureboot_app.bin
ImageRevision = 0
FwOffset = 0
IMG1LoadAddress = 0xC8000
IMG1EntryAddress = 0
UseECDSA = true
AuthenticateKeySelt = 5
AutoKeyRevEn = true
KeyRevPermission = 0xff
AutoRollBackProtEn = false
RollbackProtPerm031000 = 0
RollbackProtPerm063032 = 0
RollbackProtPerm095063 = 0
RollbackProtPerm127096 = 0
ECDSAPrivKeyFile = Keys/ECDSA_keys/ECC384rKEY05.pem
ECDSAPrivKeyPassword = MCHPECC38405
FwEncrypt = true
AesGenECPubKeyFile = Keys/ECDSA_keys/ECC384rPVTKEYEFUSE_crt.pem
TagBuildNumber= 0x0B11
Comp0ProgDrvStrenEN = false
Comp0WritCmdTotByts = 0
Comp0ReadCmdByte = 0    
Comp0WritCmdByte = 0   
Comp0DrvValue = 0       
Comp0DrvMask = 0        
Comp1ProgDrvStrenEN = false
Comp1WritCmdTotByts = 0
Comp1ReadCmdByte = 0
Comp1WritCmdByte = 0    
Comp1DrvValue = 0       
Comp1DrvMask = 0
FwAuthtic = true
DevAKCertSel = 2
DevIKSrcSel = 0
DevAKSrcSel = 0
EnFallImgStsRept = true
ECFWCnfgInfoDW0 = 0x00030003
ECFWCnfgInfoDW1 = 0x00
ECFWCnfgInfoDW2 = 0x00
ECFWCnfgInfoDW3 = 0x00
ActiveVersion = 0x04

[IMAGE "1"] ; TAG1  Image A , B
ImageLocation = 0x90000
SpiFreqMHz = 12
SpiReadCommand = fast
SpiDriveStrength = 4
SpiSlewFast = false
SpiSignalControl = 0x00
IMG1BinFile = CEC173x_GEN3_secureboot_app.bin
ImageRevision = 0
FwOffset = 0
IMG1LoadAddress = 0xc8000
IMG1EntryAddress = 0x0000
UseECDSA = true
AuthenticateKeySelt = 5
AutoKeyRevEn = true
KeyRevPermission = 0
AutoRollBackProtEn = false
RollbackProtPerm031000 = 0
RollbackProtPerm063032 = 0
RollbackProtPerm095063 = 0
RollbackProtPerm127096 = 0
ECDSAPrivKeyFile = Keys/ECDSA_keys/ECC384rKEY05.pem 
ECDSAPrivKeyPassword = MCHPECC38405
FwEncrypt = true
AesGenECPubKeyFile = Keys/ECDSA_keys/ECC384rPVTKEYEFUSE_crt.pem
TagBuildNumber= 0x0B11
Comp0ProgDrvStrenEN = false
Comp0WritCmdTotByts = 0
Comp0ReadCmdByte = 0    
Comp0WritCmdByte = 0   
Comp0DrvValue = 0       
Comp0DrvMask = 0        
Comp1ProgDrvStrenEN = false
Comp1WritCmdTotByts = 0
Comp1ReadCmdByte = 0
Comp1WritCmdByte = 0    
Comp1DrvValue = 0       
Comp1DrvMask = 0
FwAuthtic = true
DevAKCertSel = 2
DevIKSrcSel = 0
DevAKSrcSel = 0
EnFallImgStsRept = true
ECFWCnfgInfoDW0 = 0x00030003
ECFWCnfgInfoDW1 = 0x00
ECFWCnfgInfoDW2 = 0x00
ECFWCnfgInfoDW3 = 0x00
ActiveVersion = 0x04
